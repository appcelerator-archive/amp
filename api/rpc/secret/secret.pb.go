// Code generated by protoc-gen-go. DO NOT EDIT.
// source: github.com/appcelerator/amp/api/rpc/secret/secret.proto

/*
Package secret is a generated protocol buffer package.

It is generated from these files:
	github.com/appcelerator/amp/api/rpc/secret/secret.proto

It has these top-level messages:
	CreateRequest
	CreateReply
	ListRequest
	SecretEntry
	ListReply
	RemoveRequest
	RemoveReply
*/
package secret

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type CreateRequest struct {
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Data []byte `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (m *CreateRequest) Reset()                    { *m = CreateRequest{} }
func (m *CreateRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateRequest) ProtoMessage()               {}
func (*CreateRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *CreateRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CreateRequest) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type CreateReply struct {
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
}

func (m *CreateReply) Reset()                    { *m = CreateReply{} }
func (m *CreateReply) String() string            { return proto.CompactTextString(m) }
func (*CreateReply) ProtoMessage()               {}
func (*CreateReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *CreateReply) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type ListRequest struct {
}

func (m *ListRequest) Reset()                    { *m = ListRequest{} }
func (m *ListRequest) String() string            { return proto.CompactTextString(m) }
func (*ListRequest) ProtoMessage()               {}
func (*ListRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

type SecretEntry struct {
	Id   string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
}

func (m *SecretEntry) Reset()                    { *m = SecretEntry{} }
func (m *SecretEntry) String() string            { return proto.CompactTextString(m) }
func (*SecretEntry) ProtoMessage()               {}
func (*SecretEntry) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *SecretEntry) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *SecretEntry) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type ListReply struct {
	Entries []*SecretEntry `protobuf:"bytes,1,rep,name=entries" json:"entries,omitempty"`
}

func (m *ListReply) Reset()                    { *m = ListReply{} }
func (m *ListReply) String() string            { return proto.CompactTextString(m) }
func (*ListReply) ProtoMessage()               {}
func (*ListReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *ListReply) GetEntries() []*SecretEntry {
	if m != nil {
		return m.Entries
	}
	return nil
}

type RemoveRequest struct {
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
}

func (m *RemoveRequest) Reset()                    { *m = RemoveRequest{} }
func (m *RemoveRequest) String() string            { return proto.CompactTextString(m) }
func (*RemoveRequest) ProtoMessage()               {}
func (*RemoveRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *RemoveRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type RemoveReply struct {
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
}

func (m *RemoveReply) Reset()                    { *m = RemoveReply{} }
func (m *RemoveReply) String() string            { return proto.CompactTextString(m) }
func (*RemoveReply) ProtoMessage()               {}
func (*RemoveReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *RemoveReply) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func init() {
	proto.RegisterType((*CreateRequest)(nil), "secret.CreateRequest")
	proto.RegisterType((*CreateReply)(nil), "secret.CreateReply")
	proto.RegisterType((*ListRequest)(nil), "secret.ListRequest")
	proto.RegisterType((*SecretEntry)(nil), "secret.SecretEntry")
	proto.RegisterType((*ListReply)(nil), "secret.ListReply")
	proto.RegisterType((*RemoveRequest)(nil), "secret.RemoveRequest")
	proto.RegisterType((*RemoveReply)(nil), "secret.RemoveReply")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Secret service

type SecretClient interface {
	Create(ctx context.Context, in *CreateRequest, opts ...grpc.CallOption) (*CreateReply, error)
	List(ctx context.Context, in *ListRequest, opts ...grpc.CallOption) (*ListReply, error)
	Remove(ctx context.Context, in *RemoveRequest, opts ...grpc.CallOption) (*RemoveReply, error)
}

type secretClient struct {
	cc *grpc.ClientConn
}

func NewSecretClient(cc *grpc.ClientConn) SecretClient {
	return &secretClient{cc}
}

func (c *secretClient) Create(ctx context.Context, in *CreateRequest, opts ...grpc.CallOption) (*CreateReply, error) {
	out := new(CreateReply)
	err := grpc.Invoke(ctx, "/secret.Secret/Create", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *secretClient) List(ctx context.Context, in *ListRequest, opts ...grpc.CallOption) (*ListReply, error) {
	out := new(ListReply)
	err := grpc.Invoke(ctx, "/secret.Secret/List", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *secretClient) Remove(ctx context.Context, in *RemoveRequest, opts ...grpc.CallOption) (*RemoveReply, error) {
	out := new(RemoveReply)
	err := grpc.Invoke(ctx, "/secret.Secret/Remove", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Secret service

type SecretServer interface {
	Create(context.Context, *CreateRequest) (*CreateReply, error)
	List(context.Context, *ListRequest) (*ListReply, error)
	Remove(context.Context, *RemoveRequest) (*RemoveReply, error)
}

func RegisterSecretServer(s *grpc.Server, srv SecretServer) {
	s.RegisterService(&_Secret_serviceDesc, srv)
}

func _Secret_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SecretServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/secret.Secret/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SecretServer).Create(ctx, req.(*CreateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Secret_List_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SecretServer).List(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/secret.Secret/List",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SecretServer).List(ctx, req.(*ListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Secret_Remove_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemoveRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SecretServer).Remove(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/secret.Secret/Remove",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SecretServer).Remove(ctx, req.(*RemoveRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Secret_serviceDesc = grpc.ServiceDesc{
	ServiceName: "secret.Secret",
	HandlerType: (*SecretServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _Secret_Create_Handler,
		},
		{
			MethodName: "List",
			Handler:    _Secret_List_Handler,
		},
		{
			MethodName: "Remove",
			Handler:    _Secret_Remove_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "github.com/appcelerator/amp/api/rpc/secret/secret.proto",
}

func init() {
	proto.RegisterFile("github.com/appcelerator/amp/api/rpc/secret/secret.proto", fileDescriptor0)
}

var fileDescriptor0 = []byte{
	// 282 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x51, 0xcd, 0x4a, 0xc3, 0x40,
	0x10, 0x26, 0xb1, 0x44, 0x3a, 0x31, 0x82, 0x5b, 0x84, 0x50, 0x28, 0x86, 0x3d, 0xe5, 0x62, 0x82,
	0xb5, 0x50, 0xf0, 0x2a, 0xde, 0x3c, 0xc5, 0x27, 0xd8, 0x26, 0x83, 0x2e, 0x34, 0xc9, 0xba, 0x99,
	0x0a, 0xbe, 0x8f, 0x0f, 0x2a, 0x9b, 0xcd, 0x6f, 0xf5, 0xb4, 0xb3, 0xb3, 0xdf, 0x7c, 0x3f, 0xb3,
	0xb0, 0x7f, 0x97, 0xf4, 0x71, 0x3a, 0x24, 0x79, 0x5d, 0xa6, 0x42, 0xa9, 0x1c, 0x8f, 0xa8, 0x05,
	0xd5, 0x3a, 0x15, 0xa5, 0x4a, 0x85, 0x92, 0xa9, 0x56, 0x79, 0xda, 0x60, 0xae, 0x91, 0xba, 0x23,
	0x51, 0xba, 0xa6, 0x9a, 0x79, 0xf6, 0xc6, 0xf7, 0x10, 0x3c, 0x6b, 0x14, 0x84, 0x19, 0x7e, 0x9e,
	0xb0, 0x21, 0xc6, 0x60, 0x51, 0x89, 0x12, 0x43, 0x27, 0x72, 0xe2, 0x65, 0xd6, 0xd6, 0xa6, 0x57,
	0x08, 0x12, 0xa1, 0x1b, 0x39, 0xf1, 0x55, 0xd6, 0xd6, 0x7c, 0x03, 0x7e, 0x3f, 0xa8, 0x8e, 0xdf,
	0xec, 0x1a, 0x5c, 0x59, 0x74, 0x43, 0xae, 0x2c, 0x78, 0x00, 0xfe, 0xab, 0x6c, 0xa8, 0x63, 0xe5,
	0x0f, 0xe0, 0xbf, 0xb5, 0x82, 0x2f, 0x15, 0xe9, 0x3f, 0xe8, 0x41, 0xd4, 0x1d, 0x45, 0xf9, 0x13,
	0x2c, 0x2d, 0x83, 0xa1, 0xbf, 0x87, 0x4b, 0xac, 0x48, 0x4b, 0x6c, 0x42, 0x27, 0xba, 0x88, 0xfd,
	0xed, 0x2a, 0xe9, 0xe2, 0x4c, 0x68, 0xb3, 0x1e, 0xc3, 0xef, 0x20, 0xc8, 0xb0, 0xac, 0xbf, 0x86,
	0x54, 0xe7, 0xf6, 0x36, 0xe0, 0xf7, 0x80, 0x7f, 0xdc, 0x6f, 0x7f, 0x1c, 0xf0, 0x2c, 0x31, 0xdb,
	0x81, 0x67, 0x73, 0xb2, 0xdb, 0x5e, 0x72, 0xb6, 0xb0, 0xf5, 0xea, 0xbc, 0x6d, 0x08, 0x13, 0x58,
	0x18, 0xf3, 0x6c, 0x78, 0x9c, 0x2c, 0x63, 0x7d, 0x33, 0x6f, 0x1a, 0xfc, 0x0e, 0x3c, 0xeb, 0x67,
	0x54, 0x99, 0x05, 0x18, 0x55, 0x26, 0xb6, 0x0f, 0x5e, 0xfb, 0x97, 0x8f, 0xbf, 0x01, 0x00, 0x00,
	0xff, 0xff, 0xbc, 0x8d, 0x64, 0x25, 0x06, 0x02, 0x00, 0x00,
}
