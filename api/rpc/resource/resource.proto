syntax = "proto3";

package resource;

import "github.com/appcelerator/amp/data/accounts/accounts.proto";
import "github.com/golang/protobuf/ptypes/empty/empty.proto";
import "google/api/annotations.proto";

service Resource {
  rpc ResourceList (ListRequest) returns (ListReply) {
    option (google.api.http) = {
      get: "/v1/resources"
    };
  };
  rpc ResourceAddToTeam (AddToTeamRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      post: "/v1/resources/{resource_id}/organizations/{organization_name}/teams/{team_name}",
      body: "*"
    };
  };
  rpc ResourceChangePermissionLevel (ChangePermissionLevelRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      put: "/v1/resources/{resource_id}/organizations/{organization_name}/teams/{team_name}",
      body: "*"
    };
  };
  rpc ResourceRemoveFromTeam (RemoveFromTeamRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      delete: "/v1/resources/{resource_id}/organizations/{organization_name}/teams/{team_name}"
    };
  };

}

enum ResourceType {
  RESOURCE_STACK = 0;
  RESOURCE_DASHBOARD = 1;
  RESOURCE_USER = 2;
  RESOURCE_ORGANIZATION = 3;
  RESOURCE_TEAM = 4;
}

enum Action {
  ACTION_CREATE = 0;
  ACTION_READ = 1;
  ACTION_UPDATE = 2;
  ACTION_DELETE = 3;
}

message ResourceEntry {
  string id = 1;
  ResourceType type = 2;
  string name = 3;
  accounts.Account owner = 4;
}

message ListRequest {
}

message ListReply {
  repeated ResourceEntry resources = 1;
}

message AddToTeamRequest {
  string resource_id = 1;
  string organization_name = 2;
  string team_name = 3;
}

message RemoveFromTeamRequest {
  string resource_id = 1;
  string organization_name = 2;
  string team_name = 3;
}

message ChangePermissionLevelRequest {
  string organization_name = 1;
  string team_name = 2;
  string resource_id = 3;
  accounts.TeamPermissionLevel permission_level = 4;
}
