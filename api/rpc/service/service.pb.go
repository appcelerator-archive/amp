// Code generated by protoc-gen-go.
// source: github.com/appcelerator/amp/api/rpc/service/service.proto
// DO NOT EDIT!

/*
Package service is a generated protocol buffer package.

It is generated from these files:
	github.com/appcelerator/amp/api/rpc/service/service.proto

It has these top-level messages:
	ServiceSpec
	PublishSpec
	ReplicatedService
	GlobalService
	ServiceCreateRequest
	ServiceCreateResponse
	RemoveRequest
	RemoveResponse
*/
package service

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ServiceSpec struct {
	Image string `protobuf:"bytes,1,opt,name=image" json:"image,omitempty"`
	Name  string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	// Types that are valid to be assigned to Mode:
	//	*ServiceSpec_Replicated
	//	*ServiceSpec_Global
	Mode            isServiceSpec_Mode `protobuf_oneof:"mode"`
	Env             []string           `protobuf:"bytes,5,rep,name=env" json:"env,omitempty"`
	Labels          map[string]string  `protobuf:"bytes,6,rep,name=labels" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	ContainerLabels map[string]string  `protobuf:"bytes,7,rep,name=container_labels,json=containerLabels" json:"container_labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	PublishSpecs    []*PublishSpec     `protobuf:"bytes,8,rep,name=publish_specs,json=publishSpecs" json:"publish_specs,omitempty"`
}

func (m *ServiceSpec) Reset()                    { *m = ServiceSpec{} }
func (m *ServiceSpec) String() string            { return proto.CompactTextString(m) }
func (*ServiceSpec) ProtoMessage()               {}
func (*ServiceSpec) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type isServiceSpec_Mode interface {
	isServiceSpec_Mode()
}

type ServiceSpec_Replicated struct {
	Replicated *ReplicatedService `protobuf:"bytes,3,opt,name=replicated,oneof"`
}
type ServiceSpec_Global struct {
	Global *GlobalService `protobuf:"bytes,4,opt,name=global,oneof"`
}

func (*ServiceSpec_Replicated) isServiceSpec_Mode() {}
func (*ServiceSpec_Global) isServiceSpec_Mode()     {}

func (m *ServiceSpec) GetMode() isServiceSpec_Mode {
	if m != nil {
		return m.Mode
	}
	return nil
}

func (m *ServiceSpec) GetReplicated() *ReplicatedService {
	if x, ok := m.GetMode().(*ServiceSpec_Replicated); ok {
		return x.Replicated
	}
	return nil
}

func (m *ServiceSpec) GetGlobal() *GlobalService {
	if x, ok := m.GetMode().(*ServiceSpec_Global); ok {
		return x.Global
	}
	return nil
}

func (m *ServiceSpec) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *ServiceSpec) GetContainerLabels() map[string]string {
	if m != nil {
		return m.ContainerLabels
	}
	return nil
}

func (m *ServiceSpec) GetPublishSpecs() []*PublishSpec {
	if m != nil {
		return m.PublishSpecs
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*ServiceSpec) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _ServiceSpec_OneofMarshaler, _ServiceSpec_OneofUnmarshaler, _ServiceSpec_OneofSizer, []interface{}{
		(*ServiceSpec_Replicated)(nil),
		(*ServiceSpec_Global)(nil),
	}
}

func _ServiceSpec_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*ServiceSpec)
	// mode
	switch x := m.Mode.(type) {
	case *ServiceSpec_Replicated:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Replicated); err != nil {
			return err
		}
	case *ServiceSpec_Global:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Global); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("ServiceSpec.Mode has unexpected type %T", x)
	}
	return nil
}

func _ServiceSpec_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*ServiceSpec)
	switch tag {
	case 3: // mode.replicated
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ReplicatedService)
		err := b.DecodeMessage(msg)
		m.Mode = &ServiceSpec_Replicated{msg}
		return true, err
	case 4: // mode.global
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(GlobalService)
		err := b.DecodeMessage(msg)
		m.Mode = &ServiceSpec_Global{msg}
		return true, err
	default:
		return false, nil
	}
}

func _ServiceSpec_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*ServiceSpec)
	// mode
	switch x := m.Mode.(type) {
	case *ServiceSpec_Replicated:
		s := proto.Size(x.Replicated)
		n += proto.SizeVarint(3<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ServiceSpec_Global:
		s := proto.Size(x.Global)
		n += proto.SizeVarint(4<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type PublishSpec struct {
	Name         string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Protocol     string `protobuf:"bytes,2,opt,name=protocol" json:"protocol,omitempty"`
	PublishPort  uint32 `protobuf:"varint,3,opt,name=publish_port,json=publishPort" json:"publish_port,omitempty"`
	InternalPort uint32 `protobuf:"varint,4,opt,name=internal_port,json=internalPort" json:"internal_port,omitempty"`
}

func (m *PublishSpec) Reset()                    { *m = PublishSpec{} }
func (m *PublishSpec) String() string            { return proto.CompactTextString(m) }
func (*PublishSpec) ProtoMessage()               {}
func (*PublishSpec) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type ReplicatedService struct {
	Replicas uint64 `protobuf:"varint,1,opt,name=replicas" json:"replicas,omitempty"`
}

func (m *ReplicatedService) Reset()                    { *m = ReplicatedService{} }
func (m *ReplicatedService) String() string            { return proto.CompactTextString(m) }
func (*ReplicatedService) ProtoMessage()               {}
func (*ReplicatedService) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

type GlobalService struct {
}

func (m *GlobalService) Reset()                    { *m = GlobalService{} }
func (m *GlobalService) String() string            { return proto.CompactTextString(m) }
func (*GlobalService) ProtoMessage()               {}
func (*GlobalService) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

type ServiceCreateRequest struct {
	ServiceSpec *ServiceSpec `protobuf:"bytes,1,opt,name=service_spec,json=serviceSpec" json:"service_spec,omitempty"`
}

func (m *ServiceCreateRequest) Reset()                    { *m = ServiceCreateRequest{} }
func (m *ServiceCreateRequest) String() string            { return proto.CompactTextString(m) }
func (*ServiceCreateRequest) ProtoMessage()               {}
func (*ServiceCreateRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *ServiceCreateRequest) GetServiceSpec() *ServiceSpec {
	if m != nil {
		return m.ServiceSpec
	}
	return nil
}

type ServiceCreateResponse struct {
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
}

func (m *ServiceCreateResponse) Reset()                    { *m = ServiceCreateResponse{} }
func (m *ServiceCreateResponse) String() string            { return proto.CompactTextString(m) }
func (*ServiceCreateResponse) ProtoMessage()               {}
func (*ServiceCreateResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

type RemoveRequest struct {
	Ident string `protobuf:"bytes,1,opt,name=ident" json:"ident,omitempty"`
}

func (m *RemoveRequest) Reset()                    { *m = RemoveRequest{} }
func (m *RemoveRequest) String() string            { return proto.CompactTextString(m) }
func (*RemoveRequest) ProtoMessage()               {}
func (*RemoveRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

type RemoveResponse struct {
	Ident string `protobuf:"bytes,1,opt,name=ident" json:"ident,omitempty"`
}

func (m *RemoveResponse) Reset()                    { *m = RemoveResponse{} }
func (m *RemoveResponse) String() string            { return proto.CompactTextString(m) }
func (*RemoveResponse) ProtoMessage()               {}
func (*RemoveResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func init() {
	proto.RegisterType((*ServiceSpec)(nil), "service.ServiceSpec")
	proto.RegisterType((*PublishSpec)(nil), "service.PublishSpec")
	proto.RegisterType((*ReplicatedService)(nil), "service.ReplicatedService")
	proto.RegisterType((*GlobalService)(nil), "service.GlobalService")
	proto.RegisterType((*ServiceCreateRequest)(nil), "service.ServiceCreateRequest")
	proto.RegisterType((*ServiceCreateResponse)(nil), "service.ServiceCreateResponse")
	proto.RegisterType((*RemoveRequest)(nil), "service.RemoveRequest")
	proto.RegisterType((*RemoveResponse)(nil), "service.RemoveResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion3

// Client API for Service service

type ServiceClient interface {
	Create(ctx context.Context, in *ServiceCreateRequest, opts ...grpc.CallOption) (*ServiceCreateResponse, error)
	Remove(ctx context.Context, in *RemoveRequest, opts ...grpc.CallOption) (*RemoveResponse, error)
}

type serviceClient struct {
	cc *grpc.ClientConn
}

func NewServiceClient(cc *grpc.ClientConn) ServiceClient {
	return &serviceClient{cc}
}

func (c *serviceClient) Create(ctx context.Context, in *ServiceCreateRequest, opts ...grpc.CallOption) (*ServiceCreateResponse, error) {
	out := new(ServiceCreateResponse)
	err := grpc.Invoke(ctx, "/service.Service/Create", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serviceClient) Remove(ctx context.Context, in *RemoveRequest, opts ...grpc.CallOption) (*RemoveResponse, error) {
	out := new(RemoveResponse)
	err := grpc.Invoke(ctx, "/service.Service/Remove", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Service service

type ServiceServer interface {
	Create(context.Context, *ServiceCreateRequest) (*ServiceCreateResponse, error)
	Remove(context.Context, *RemoveRequest) (*RemoveResponse, error)
}

func RegisterServiceServer(s *grpc.Server, srv ServiceServer) {
	s.RegisterService(&_Service_serviceDesc, srv)
}

func _Service_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ServiceCreateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServiceServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.Service/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServiceServer).Create(ctx, req.(*ServiceCreateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Service_Remove_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemoveRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServiceServer).Remove(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.Service/Remove",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServiceServer).Remove(ctx, req.(*RemoveRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Service_serviceDesc = grpc.ServiceDesc{
	ServiceName: "service.Service",
	HandlerType: (*ServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _Service_Create_Handler,
		},
		{
			MethodName: "Remove",
			Handler:    _Service_Remove_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: fileDescriptor0,
}

func init() {
	proto.RegisterFile("github.com/appcelerator/amp/api/rpc/service/service.proto", fileDescriptor0)
}

var fileDescriptor0 = []byte{
	// 537 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x94, 0x53, 0xc1, 0x6e, 0xd3, 0x40,
	0x10, 0xad, 0x13, 0xd7, 0x6d, 0xc7, 0x49, 0x5b, 0x56, 0xa1, 0x58, 0x96, 0x40, 0xc1, 0x08, 0x08,
	0x97, 0x18, 0x85, 0x03, 0x0d, 0x70, 0x6a, 0x85, 0x00, 0x09, 0x89, 0x6a, 0xcb, 0x3d, 0xda, 0x38,
	0xa3, 0xd4, 0xc2, 0xf6, 0x2e, 0xbb, 0x9b, 0x48, 0xfd, 0x00, 0x4e, 0x9c, 0xf8, 0x63, 0xe4, 0xf5,
	0xda, 0x71, 0xda, 0x70, 0xe0, 0xe4, 0x79, 0xb3, 0x6f, 0xdf, 0xcc, 0xf8, 0xcd, 0xc2, 0x74, 0x99,
	0xea, 0x9b, 0xd5, 0x7c, 0x9c, 0xf0, 0x3c, 0x66, 0x42, 0x24, 0x98, 0xa1, 0x64, 0x9a, 0xcb, 0x98,
	0xe5, 0x22, 0x66, 0x22, 0x8d, 0xa5, 0x48, 0x62, 0x85, 0x72, 0x9d, 0x26, 0x58, 0x7f, 0xc7, 0x42,
	0x72, 0xcd, 0xc9, 0x81, 0x85, 0xd1, 0x6f, 0x17, 0xfc, 0xeb, 0x2a, 0xbe, 0x16, 0x98, 0x90, 0x01,
	0xec, 0xa7, 0x39, 0x5b, 0x62, 0xe0, 0x0c, 0x9d, 0xd1, 0x11, 0xad, 0x00, 0x21, 0xe0, 0x16, 0x2c,
	0xc7, 0xa0, 0x63, 0x92, 0x26, 0x26, 0x1f, 0x00, 0x24, 0x8a, 0x2c, 0x4d, 0x98, 0xc6, 0x45, 0xd0,
	0x1d, 0x3a, 0x23, 0x7f, 0x12, 0x8e, 0xeb, 0x32, 0xb4, 0x39, 0xb2, 0xea, 0x9f, 0xf7, 0x68, 0x8b,
	0x4f, 0x5e, 0x83, 0xb7, 0xcc, 0xf8, 0x9c, 0x65, 0x81, 0x6b, 0x6e, 0x9e, 0x35, 0x37, 0x3f, 0x99,
	0xf4, 0xe6, 0x96, 0xe5, 0x91, 0x53, 0xe8, 0x62, 0xb1, 0x0e, 0xf6, 0x87, 0xdd, 0xd1, 0x11, 0x2d,
	0x43, 0x72, 0x0e, 0x5e, 0xc6, 0xe6, 0x98, 0xa9, 0xc0, 0x1b, 0x76, 0x47, 0xfe, 0x64, 0xd8, 0x68,
	0xb4, 0x26, 0x1a, 0x7f, 0x35, 0x94, 0x8f, 0x85, 0x96, 0xb7, 0xd4, 0xf2, 0xc9, 0x77, 0x38, 0x4d,
	0x78, 0xa1, 0x59, 0x5a, 0xa0, 0x9c, 0x59, 0x8d, 0x03, 0xa3, 0xf1, 0x6a, 0xa7, 0xc6, 0x65, 0x4d,
	0x6e, 0x8b, 0x9d, 0x24, 0xdb, 0x59, 0x32, 0x85, 0xbe, 0x58, 0xcd, 0xb3, 0x54, 0xdd, 0xcc, 0x94,
	0xc0, 0x44, 0x05, 0x87, 0x46, 0x72, 0xd0, 0x48, 0x5e, 0x55, 0xa7, 0xa5, 0x24, 0xed, 0x89, 0x0d,
	0x50, 0xe1, 0x14, 0xfc, 0x96, 0x74, 0x39, 0xeb, 0x0f, 0xbc, 0xb5, 0x1e, 0x94, 0x61, 0xe9, 0xcb,
	0x9a, 0x65, 0xab, 0xda, 0x82, 0x0a, 0xbc, 0xeb, 0x9c, 0x3b, 0xe1, 0x05, 0x0c, 0x76, 0xb5, 0xf7,
	0x3f, 0x1a, 0x17, 0x1e, 0xb8, 0x39, 0x5f, 0x60, 0xf4, 0xcb, 0x01, 0xbf, 0xd5, 0x64, 0xe3, 0xbb,
	0xd3, 0xf2, 0x3d, 0x84, 0x43, 0xb3, 0x43, 0x09, 0xcf, 0xac, 0x50, 0x83, 0xc9, 0x53, 0xa8, 0xc7,
	0x9a, 0x09, 0x2e, 0xb5, 0xd9, 0x8a, 0x3e, 0xf5, 0x6d, 0xee, 0x8a, 0x4b, 0x4d, 0x9e, 0x41, 0x3f,
	0x2d, 0x34, 0xca, 0x82, 0x65, 0x15, 0xc7, 0x35, 0x9c, 0x5e, 0x9d, 0x2c, 0x49, 0x51, 0x0c, 0x0f,
	0xee, 0x2d, 0x50, 0x59, 0xd8, 0x2e, 0x90, 0x32, 0x0d, 0xb9, 0xb4, 0xc1, 0xd1, 0x09, 0xf4, 0xb7,
	0xf6, 0x26, 0xfa, 0x06, 0x03, 0x1b, 0x5e, 0x4a, 0x64, 0x1a, 0x29, 0xfe, 0x5c, 0xa1, 0xd2, 0xe4,
	0x2d, 0xf4, 0xac, 0x1b, 0xc6, 0x23, 0x23, 0xd4, 0xb6, 0xa8, 0xe5, 0x3a, 0xf5, 0xd5, 0x06, 0x44,
	0x2f, 0xe1, 0xe1, 0x1d, 0x41, 0x25, 0x78, 0xa1, 0x90, 0x1c, 0x43, 0x27, 0x5d, 0xd8, 0x3f, 0xd4,
	0x49, 0x17, 0xd1, 0x73, 0xe8, 0x53, 0xcc, 0xf9, 0xba, 0x29, 0x59, 0x3e, 0xa9, 0x05, 0x16, 0xba,
	0x79, 0x52, 0x25, 0x88, 0x5e, 0xc0, 0x71, 0x4d, 0xb3, 0x42, 0x3b, 0x79, 0x93, 0x3f, 0x0e, 0x1c,
	0xd4, 0x7f, 0xe0, 0x0b, 0x78, 0x55, 0x71, 0xf2, 0xf8, 0x6e, 0xc3, 0x5b, 0x53, 0x86, 0x4f, 0xfe,
	0x75, 0x5c, 0x95, 0x8a, 0xf6, 0xc8, 0x7b, 0xf0, 0xaa, 0xf2, 0xe4, 0xac, 0xf5, 0x66, 0x5b, 0x6d,
	0x87, 0x8f, 0xee, 0xe5, 0xeb, 0xcb, 0x73, 0xcf, 0x18, 0xfe, 0xe6, 0x6f, 0x00, 0x00, 0x00, 0xff,
	0xff, 0xaf, 0x94, 0x28, 0xd3, 0x81, 0x04, 0x00, 0x00,
}
