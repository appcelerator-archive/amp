// Code generated by protoc-gen-go.
// source: github.com/appcelerator/amp/api/rpc/account/account.proto
// DO NOT EDIT!

/*
Package account is a generated protocol buffer package.

It is generated from these files:
	github.com/appcelerator/amp/api/rpc/account/account.proto

It has these top-level messages:
	SignUpRequest
	VerificationRequest
	LogInRequest
	SessionReply
	OrganizationRequest
	AccountsRequest
	AccountRequest
	AccountInfo
	Billing
	Settings
	AccountReply
	ListReply
	EditRequest
	OrganizationMembershipsRequest
	TeamRequest
	TeamReply
	TeamMembershipsRequest
	PermissionRequest
	Account
	OrganizationMember
	Resource
	ResourceSettings
	Team
	TeamMember
	Permission
	ResourceType
	GrantType
*/
package account

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/grpc-ecosystem/grpc-gateway/third_party/googleapis/google/api"
import google_protobuf1 "github.com/golang/protobuf/ptypes/empty"
import google_protobuf2 "github.com/golang/protobuf/ptypes/timestamp"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type AccountType int32

const (
	AccountType_USER         AccountType = 0
	AccountType_ORGANIZATION AccountType = 1
)

var AccountType_name = map[int32]string{
	0: "USER",
	1: "ORGANIZATION",
}
var AccountType_value = map[string]int32{
	"USER":         0,
	"ORGANIZATION": 1,
}

func (x AccountType) String() string {
	return proto.EnumName(AccountType_name, int32(x))
}
func (AccountType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type SignUpRequest struct {
	Name     string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Email    string `protobuf:"bytes,2,opt,name=email" json:"email,omitempty"`
	Password string `protobuf:"bytes,3,opt,name=password" json:"password,omitempty"`
}

func (m *SignUpRequest) Reset()                    { *m = SignUpRequest{} }
func (m *SignUpRequest) String() string            { return proto.CompactTextString(m) }
func (*SignUpRequest) ProtoMessage()               {}
func (*SignUpRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *SignUpRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *SignUpRequest) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *SignUpRequest) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

type VerificationRequest struct {
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Code string `protobuf:"bytes,2,opt,name=code" json:"code,omitempty"`
}

func (m *VerificationRequest) Reset()                    { *m = VerificationRequest{} }
func (m *VerificationRequest) String() string            { return proto.CompactTextString(m) }
func (*VerificationRequest) ProtoMessage()               {}
func (*VerificationRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *VerificationRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *VerificationRequest) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

type LogInRequest struct {
	Name     string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Password string `protobuf:"bytes,2,opt,name=password" json:"password,omitempty"`
}

func (m *LogInRequest) Reset()                    { *m = LogInRequest{} }
func (m *LogInRequest) String() string            { return proto.CompactTextString(m) }
func (*LogInRequest) ProtoMessage()               {}
func (*LogInRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *LogInRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *LogInRequest) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

type SessionReply struct {
	SessionKey string `protobuf:"bytes,1,opt,name=sessionKey" json:"sessionKey,omitempty"`
}

func (m *SessionReply) Reset()                    { *m = SessionReply{} }
func (m *SessionReply) String() string            { return proto.CompactTextString(m) }
func (*SessionReply) ProtoMessage()               {}
func (*SessionReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *SessionReply) GetSessionKey() string {
	if m != nil {
		return m.SessionKey
	}
	return ""
}

type OrganizationRequest struct {
	Name  string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Email string `protobuf:"bytes,2,opt,name=email" json:"email,omitempty"`
}

func (m *OrganizationRequest) Reset()                    { *m = OrganizationRequest{} }
func (m *OrganizationRequest) String() string            { return proto.CompactTextString(m) }
func (*OrganizationRequest) ProtoMessage()               {}
func (*OrganizationRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *OrganizationRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *OrganizationRequest) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

type AccountsRequest struct {
	Type         string `protobuf:"bytes,1,opt,name=type" json:"type,omitempty"`
	Organization string `protobuf:"bytes,2,opt,name=organization" json:"organization,omitempty"`
	Team         string `protobuf:"bytes,3,opt,name=team" json:"team,omitempty"`
}

func (m *AccountsRequest) Reset()                    { *m = AccountsRequest{} }
func (m *AccountsRequest) String() string            { return proto.CompactTextString(m) }
func (*AccountsRequest) ProtoMessage()               {}
func (*AccountsRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *AccountsRequest) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *AccountsRequest) GetOrganization() string {
	if m != nil {
		return m.Organization
	}
	return ""
}

func (m *AccountsRequest) GetTeam() string {
	if m != nil {
		return m.Team
	}
	return ""
}

type AccountRequest struct {
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (m *AccountRequest) Reset()                    { *m = AccountRequest{} }
func (m *AccountRequest) String() string            { return proto.CompactTextString(m) }
func (*AccountRequest) ProtoMessage()               {}
func (*AccountRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *AccountRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type AccountInfo struct {
	Name          string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Email         string `protobuf:"bytes,2,opt,name=email" json:"email,omitempty"`
	EmailVerified bool   `protobuf:"varint,3,opt,name=email_verified,json=emailVerified" json:"email_verified,omitempty"`
	AccountType   string `protobuf:"bytes,4,opt,name=account_type,json=accountType" json:"account_type,omitempty"`
}

func (m *AccountInfo) Reset()                    { *m = AccountInfo{} }
func (m *AccountInfo) String() string            { return proto.CompactTextString(m) }
func (*AccountInfo) ProtoMessage()               {}
func (*AccountInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *AccountInfo) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *AccountInfo) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *AccountInfo) GetEmailVerified() bool {
	if m != nil {
		return m.EmailVerified
	}
	return false
}

func (m *AccountInfo) GetAccountType() string {
	if m != nil {
		return m.AccountType
	}
	return ""
}

type Billing struct {
	Contact       string `protobuf:"bytes,1,opt,name=contact" json:"contact,omitempty"`
	AddressLine_1 string `protobuf:"bytes,2,opt,name=address_line_1,json=addressLine1" json:"address_line_1,omitempty"`
	AddressLine_2 string `protobuf:"bytes,3,opt,name=address_line_2,json=addressLine2" json:"address_line_2,omitempty"`
	City          string `protobuf:"bytes,4,opt,name=city" json:"city,omitempty"`
	State         string `protobuf:"bytes,5,opt,name=state" json:"state,omitempty"`
	ZipCode       string `protobuf:"bytes,6,opt,name=zip_code,json=zipCode" json:"zip_code,omitempty"`
	PhoneNumber   string `protobuf:"bytes,7,opt,name=phone_number,json=phoneNumber" json:"phone_number,omitempty"`
	FaxNumber     string `protobuf:"bytes,8,opt,name=fax_number,json=faxNumber" json:"fax_number,omitempty"`
	Email         string `protobuf:"bytes,9,opt,name=email" json:"email,omitempty"`
	CardType      string `protobuf:"bytes,10,opt,name=card_type,json=cardType" json:"card_type,omitempty"`
	CardNumber    string `protobuf:"bytes,11,opt,name=card_number,json=cardNumber" json:"card_number,omitempty"`
}

func (m *Billing) Reset()                    { *m = Billing{} }
func (m *Billing) String() string            { return proto.CompactTextString(m) }
func (*Billing) ProtoMessage()               {}
func (*Billing) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *Billing) GetContact() string {
	if m != nil {
		return m.Contact
	}
	return ""
}

func (m *Billing) GetAddressLine_1() string {
	if m != nil {
		return m.AddressLine_1
	}
	return ""
}

func (m *Billing) GetAddressLine_2() string {
	if m != nil {
		return m.AddressLine_2
	}
	return ""
}

func (m *Billing) GetCity() string {
	if m != nil {
		return m.City
	}
	return ""
}

func (m *Billing) GetState() string {
	if m != nil {
		return m.State
	}
	return ""
}

func (m *Billing) GetZipCode() string {
	if m != nil {
		return m.ZipCode
	}
	return ""
}

func (m *Billing) GetPhoneNumber() string {
	if m != nil {
		return m.PhoneNumber
	}
	return ""
}

func (m *Billing) GetFaxNumber() string {
	if m != nil {
		return m.FaxNumber
	}
	return ""
}

func (m *Billing) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *Billing) GetCardType() string {
	if m != nil {
		return m.CardType
	}
	return ""
}

func (m *Billing) GetCardNumber() string {
	if m != nil {
		return m.CardNumber
	}
	return ""
}

type Settings struct {
	Plan string `protobuf:"bytes,1,opt,name=plan" json:"plan,omitempty"`
}

func (m *Settings) Reset()                    { *m = Settings{} }
func (m *Settings) String() string            { return proto.CompactTextString(m) }
func (*Settings) ProtoMessage()               {}
func (*Settings) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *Settings) GetPlan() string {
	if m != nil {
		return m.Plan
	}
	return ""
}

type AccountReply struct {
	Account  *Account  `protobuf:"bytes,1,opt,name=account" json:"account,omitempty"`
	Billing  *Billing  `protobuf:"bytes,2,opt,name=billing" json:"billing,omitempty"`
	Settings *Settings `protobuf:"bytes,3,opt,name=settings" json:"settings,omitempty"`
}

func (m *AccountReply) Reset()                    { *m = AccountReply{} }
func (m *AccountReply) String() string            { return proto.CompactTextString(m) }
func (*AccountReply) ProtoMessage()               {}
func (*AccountReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *AccountReply) GetAccount() *Account {
	if m != nil {
		return m.Account
	}
	return nil
}

func (m *AccountReply) GetBilling() *Billing {
	if m != nil {
		return m.Billing
	}
	return nil
}

func (m *AccountReply) GetSettings() *Settings {
	if m != nil {
		return m.Settings
	}
	return nil
}

type ListReply struct {
	Accounts    []*Account           `protobuf:"bytes,1,rep,name=accounts" json:"accounts,omitempty"`
	Teams       []*TeamReply         `protobuf:"bytes,2,rep,name=teams" json:"teams,omitempty"`
	Permissions []*PermissionRequest `protobuf:"bytes,3,rep,name=permissions" json:"permissions,omitempty"`
}

func (m *ListReply) Reset()                    { *m = ListReply{} }
func (m *ListReply) String() string            { return proto.CompactTextString(m) }
func (*ListReply) ProtoMessage()               {}
func (*ListReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *ListReply) GetAccounts() []*Account {
	if m != nil {
		return m.Accounts
	}
	return nil
}

func (m *ListReply) GetTeams() []*TeamReply {
	if m != nil {
		return m.Teams
	}
	return nil
}

func (m *ListReply) GetPermissions() []*PermissionRequest {
	if m != nil {
		return m.Permissions
	}
	return nil
}

type EditRequest struct {
	Name        string   `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Email       string   `protobuf:"bytes,2,opt,name=email" json:"email,omitempty"`
	Password    string   `protobuf:"bytes,3,opt,name=password" json:"password,omitempty"`
	NewPassword string   `protobuf:"bytes,4,opt,name=new_password,json=newPassword" json:"new_password,omitempty"`
	Billing     *Billing `protobuf:"bytes,5,opt,name=billing" json:"billing,omitempty"`
}

func (m *EditRequest) Reset()                    { *m = EditRequest{} }
func (m *EditRequest) String() string            { return proto.CompactTextString(m) }
func (*EditRequest) ProtoMessage()               {}
func (*EditRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

func (m *EditRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *EditRequest) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *EditRequest) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *EditRequest) GetNewPassword() string {
	if m != nil {
		return m.NewPassword
	}
	return ""
}

func (m *EditRequest) GetBilling() *Billing {
	if m != nil {
		return m.Billing
	}
	return nil
}

type OrganizationMembershipsRequest struct {
	Name    string   `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Members []string `protobuf:"bytes,2,rep,name=Members" json:"Members,omitempty"`
}

func (m *OrganizationMembershipsRequest) Reset()                    { *m = OrganizationMembershipsRequest{} }
func (m *OrganizationMembershipsRequest) String() string            { return proto.CompactTextString(m) }
func (*OrganizationMembershipsRequest) ProtoMessage()               {}
func (*OrganizationMembershipsRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{13} }

func (m *OrganizationMembershipsRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *OrganizationMembershipsRequest) GetMembers() []string {
	if m != nil {
		return m.Members
	}
	return nil
}

type TeamRequest struct {
	Name         string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Description  string `protobuf:"bytes,2,opt,name=description" json:"description,omitempty"`
	Organization string `protobuf:"bytes,3,opt,name=organization" json:"organization,omitempty"`
}

func (m *TeamRequest) Reset()                    { *m = TeamRequest{} }
func (m *TeamRequest) String() string            { return proto.CompactTextString(m) }
func (*TeamRequest) ProtoMessage()               {}
func (*TeamRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{14} }

func (m *TeamRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *TeamRequest) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *TeamRequest) GetOrganization() string {
	if m != nil {
		return m.Organization
	}
	return ""
}

type TeamReply struct {
	Name         string   `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Description  string   `protobuf:"bytes,2,opt,name=description" json:"description,omitempty"`
	Organization string   `protobuf:"bytes,3,opt,name=organization" json:"organization,omitempty"`
	Members      []string `protobuf:"bytes,4,rep,name=members" json:"members,omitempty"`
}

func (m *TeamReply) Reset()                    { *m = TeamReply{} }
func (m *TeamReply) String() string            { return proto.CompactTextString(m) }
func (*TeamReply) ProtoMessage()               {}
func (*TeamReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{15} }

func (m *TeamReply) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *TeamReply) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *TeamReply) GetOrganization() string {
	if m != nil {
		return m.Organization
	}
	return ""
}

func (m *TeamReply) GetMembers() []string {
	if m != nil {
		return m.Members
	}
	return nil
}

type TeamMembershipsRequest struct {
	Name         string   `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Organization string   `protobuf:"bytes,2,opt,name=organization" json:"organization,omitempty"`
	Members      []string `protobuf:"bytes,3,rep,name=Members" json:"Members,omitempty"`
}

func (m *TeamMembershipsRequest) Reset()                    { *m = TeamMembershipsRequest{} }
func (m *TeamMembershipsRequest) String() string            { return proto.CompactTextString(m) }
func (*TeamMembershipsRequest) ProtoMessage()               {}
func (*TeamMembershipsRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{16} }

func (m *TeamMembershipsRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *TeamMembershipsRequest) GetOrganization() string {
	if m != nil {
		return m.Organization
	}
	return ""
}

func (m *TeamMembershipsRequest) GetMembers() []string {
	if m != nil {
		return m.Members
	}
	return nil
}

type PermissionRequest struct {
	Team         string `protobuf:"bytes,1,opt,name=team" json:"team,omitempty"`
	Organization string `protobuf:"bytes,2,opt,name=organization" json:"organization,omitempty"`
	Level        string `protobuf:"bytes,3,opt,name=level" json:"level,omitempty"`
	ResourceId   string `protobuf:"bytes,4,opt,name=resource_id,json=resourceId" json:"resource_id,omitempty"`
}

func (m *PermissionRequest) Reset()                    { *m = PermissionRequest{} }
func (m *PermissionRequest) String() string            { return proto.CompactTextString(m) }
func (*PermissionRequest) ProtoMessage()               {}
func (*PermissionRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{17} }

func (m *PermissionRequest) GetTeam() string {
	if m != nil {
		return m.Team
	}
	return ""
}

func (m *PermissionRequest) GetOrganization() string {
	if m != nil {
		return m.Organization
	}
	return ""
}

func (m *PermissionRequest) GetLevel() string {
	if m != nil {
		return m.Level
	}
	return ""
}

func (m *PermissionRequest) GetResourceId() string {
	if m != nil {
		return m.ResourceId
	}
	return ""
}

type Account struct {
	Id         int64       `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Name       string      `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Type       AccountType `protobuf:"varint,3,opt,name=type,enum=account.AccountType" json:"type,omitempty"`
	Email      string      `protobuf:"bytes,4,opt,name=email" json:"email,omitempty"`
	PwHashcode string      `protobuf:"bytes,5,opt,name=pw_hashcode,json=pwHashcode" json:"pw_hashcode,omitempty"`
	IsVerified bool        `protobuf:"varint,6,opt,name=is_verified,json=isVerified" json:"is_verified,omitempty"`
	// TODO Billing Attributes;
	CreateDt *google_protobuf2.Timestamp `protobuf:"bytes,7,opt,name=create_dt,json=createDt" json:"create_dt,omitempty"`
}

func (m *Account) Reset()                    { *m = Account{} }
func (m *Account) String() string            { return proto.CompactTextString(m) }
func (*Account) ProtoMessage()               {}
func (*Account) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{18} }

func (m *Account) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Account) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Account) GetType() AccountType {
	if m != nil {
		return m.Type
	}
	return AccountType_USER
}

func (m *Account) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *Account) GetPwHashcode() string {
	if m != nil {
		return m.PwHashcode
	}
	return ""
}

func (m *Account) GetIsVerified() bool {
	if m != nil {
		return m.IsVerified
	}
	return false
}

func (m *Account) GetCreateDt() *google_protobuf2.Timestamp {
	if m != nil {
		return m.CreateDt
	}
	return nil
}

type OrganizationMember struct {
	Id            int64                       `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	OrgAccountId  int64                       `protobuf:"varint,2,opt,name=org_account_id,json=orgAccountId" json:"org_account_id,omitempty"`
	UserAccountId int64                       `protobuf:"varint,3,opt,name=user_account_id,json=userAccountId" json:"user_account_id,omitempty"`
	CreateDt      *google_protobuf2.Timestamp `protobuf:"bytes,4,opt,name=create_dt,json=createDt" json:"create_dt,omitempty"`
}

func (m *OrganizationMember) Reset()                    { *m = OrganizationMember{} }
func (m *OrganizationMember) String() string            { return proto.CompactTextString(m) }
func (*OrganizationMember) ProtoMessage()               {}
func (*OrganizationMember) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{19} }

func (m *OrganizationMember) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *OrganizationMember) GetOrgAccountId() int64 {
	if m != nil {
		return m.OrgAccountId
	}
	return 0
}

func (m *OrganizationMember) GetUserAccountId() int64 {
	if m != nil {
		return m.UserAccountId
	}
	return 0
}

func (m *OrganizationMember) GetCreateDt() *google_protobuf2.Timestamp {
	if m != nil {
		return m.CreateDt
	}
	return nil
}

type Resource struct {
	Id           int64                       `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	OrgAccountId int64                       `protobuf:"varint,2,opt,name=org_account_id,json=orgAccountId" json:"org_account_id,omitempty"`
	Name         string                      `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
	Type         string                      `protobuf:"bytes,4,opt,name=type" json:"type,omitempty"`
	CreateDt     *google_protobuf2.Timestamp `protobuf:"bytes,5,opt,name=create_dt,json=createDt" json:"create_dt,omitempty"`
}

func (m *Resource) Reset()                    { *m = Resource{} }
func (m *Resource) String() string            { return proto.CompactTextString(m) }
func (*Resource) ProtoMessage()               {}
func (*Resource) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{20} }

func (m *Resource) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Resource) GetOrgAccountId() int64 {
	if m != nil {
		return m.OrgAccountId
	}
	return 0
}

func (m *Resource) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Resource) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *Resource) GetCreateDt() *google_protobuf2.Timestamp {
	if m != nil {
		return m.CreateDt
	}
	return nil
}

type ResourceSettings struct {
	Id         int64                       `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	ResourceId int64                       `protobuf:"varint,2,opt,name=resource_id,json=resourceId" json:"resource_id,omitempty"`
	Key        string                      `protobuf:"bytes,3,opt,name=key" json:"key,omitempty"`
	Value      string                      `protobuf:"bytes,4,opt,name=value" json:"value,omitempty"`
	CreateDt   *google_protobuf2.Timestamp `protobuf:"bytes,5,opt,name=create_dt,json=createDt" json:"create_dt,omitempty"`
}

func (m *ResourceSettings) Reset()                    { *m = ResourceSettings{} }
func (m *ResourceSettings) String() string            { return proto.CompactTextString(m) }
func (*ResourceSettings) ProtoMessage()               {}
func (*ResourceSettings) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{21} }

func (m *ResourceSettings) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *ResourceSettings) GetResourceId() int64 {
	if m != nil {
		return m.ResourceId
	}
	return 0
}

func (m *ResourceSettings) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *ResourceSettings) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func (m *ResourceSettings) GetCreateDt() *google_protobuf2.Timestamp {
	if m != nil {
		return m.CreateDt
	}
	return nil
}

type Team struct {
	Id           int64                       `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	OrgAccountId int64                       `protobuf:"varint,2,opt,name=org_account_id,json=orgAccountId" json:"org_account_id,omitempty"`
	Name         string                      `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
	Desc         string                      `protobuf:"bytes,4,opt,name=desc" json:"desc,omitempty"`
	CreateDt     *google_protobuf2.Timestamp `protobuf:"bytes,5,opt,name=create_dt,json=createDt" json:"create_dt,omitempty"`
}

func (m *Team) Reset()                    { *m = Team{} }
func (m *Team) String() string            { return proto.CompactTextString(m) }
func (*Team) ProtoMessage()               {}
func (*Team) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{22} }

func (m *Team) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Team) GetOrgAccountId() int64 {
	if m != nil {
		return m.OrgAccountId
	}
	return 0
}

func (m *Team) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Team) GetDesc() string {
	if m != nil {
		return m.Desc
	}
	return ""
}

func (m *Team) GetCreateDt() *google_protobuf2.Timestamp {
	if m != nil {
		return m.CreateDt
	}
	return nil
}

type TeamMember struct {
	Id            int64                       `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	UserAccountId int64                       `protobuf:"varint,2,opt,name=user_account_id,json=userAccountId" json:"user_account_id,omitempty"`
	TeamId        int64                       `protobuf:"varint,3,opt,name=team_id,json=teamId" json:"team_id,omitempty"`
	CreateDt      *google_protobuf2.Timestamp `protobuf:"bytes,5,opt,name=create_dt,json=createDt" json:"create_dt,omitempty"`
}

func (m *TeamMember) Reset()                    { *m = TeamMember{} }
func (m *TeamMember) String() string            { return proto.CompactTextString(m) }
func (*TeamMember) ProtoMessage()               {}
func (*TeamMember) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{23} }

func (m *TeamMember) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *TeamMember) GetUserAccountId() int64 {
	if m != nil {
		return m.UserAccountId
	}
	return 0
}

func (m *TeamMember) GetTeamId() int64 {
	if m != nil {
		return m.TeamId
	}
	return 0
}

func (m *TeamMember) GetCreateDt() *google_protobuf2.Timestamp {
	if m != nil {
		return m.CreateDt
	}
	return nil
}

type Permission struct {
	Id         int64                       `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	TeamId     int64                       `protobuf:"varint,2,opt,name=team_id,json=teamId" json:"team_id,omitempty"`
	ResourceId int64                       `protobuf:"varint,3,opt,name=resource_id,json=resourceId" json:"resource_id,omitempty"`
	GrantId    int64                       `protobuf:"varint,4,opt,name=grant_id,json=grantId" json:"grant_id,omitempty"`
	CreateDt   *google_protobuf2.Timestamp `protobuf:"bytes,5,opt,name=create_dt,json=createDt" json:"create_dt,omitempty"`
}

func (m *Permission) Reset()                    { *m = Permission{} }
func (m *Permission) String() string            { return proto.CompactTextString(m) }
func (*Permission) ProtoMessage()               {}
func (*Permission) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{24} }

func (m *Permission) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Permission) GetTeamId() int64 {
	if m != nil {
		return m.TeamId
	}
	return 0
}

func (m *Permission) GetResourceId() int64 {
	if m != nil {
		return m.ResourceId
	}
	return 0
}

func (m *Permission) GetGrantId() int64 {
	if m != nil {
		return m.GrantId
	}
	return 0
}

func (m *Permission) GetCreateDt() *google_protobuf2.Timestamp {
	if m != nil {
		return m.CreateDt
	}
	return nil
}

// Reference Data
type ResourceType struct {
	Id           int64                       `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	ResourceName string                      `protobuf:"bytes,3,opt,name=resource_name,json=resourceName" json:"resource_name,omitempty"`
	ResourceDesc string                      `protobuf:"bytes,4,opt,name=resource_desc,json=resourceDesc" json:"resource_desc,omitempty"`
	CreateDt     *google_protobuf2.Timestamp `protobuf:"bytes,5,opt,name=create_dt,json=createDt" json:"create_dt,omitempty"`
}

func (m *ResourceType) Reset()                    { *m = ResourceType{} }
func (m *ResourceType) String() string            { return proto.CompactTextString(m) }
func (*ResourceType) ProtoMessage()               {}
func (*ResourceType) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{25} }

func (m *ResourceType) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *ResourceType) GetResourceName() string {
	if m != nil {
		return m.ResourceName
	}
	return ""
}

func (m *ResourceType) GetResourceDesc() string {
	if m != nil {
		return m.ResourceDesc
	}
	return ""
}

func (m *ResourceType) GetCreateDt() *google_protobuf2.Timestamp {
	if m != nil {
		return m.CreateDt
	}
	return nil
}

type GrantType struct {
	Id             int64                       `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	ResourceTypeId int64                       `protobuf:"varint,2,opt,name=resource_type_id,json=resourceTypeId" json:"resource_type_id,omitempty"`
	GrantName      string                      `protobuf:"bytes,3,opt,name=grant_name,json=grantName" json:"grant_name,omitempty"`
	GrantDesc      string                      `protobuf:"bytes,4,opt,name=grant_desc,json=grantDesc" json:"grant_desc,omitempty"`
	CreateDt       *google_protobuf2.Timestamp `protobuf:"bytes,5,opt,name=create_dt,json=createDt" json:"create_dt,omitempty"`
}

func (m *GrantType) Reset()                    { *m = GrantType{} }
func (m *GrantType) String() string            { return proto.CompactTextString(m) }
func (*GrantType) ProtoMessage()               {}
func (*GrantType) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{26} }

func (m *GrantType) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *GrantType) GetResourceTypeId() int64 {
	if m != nil {
		return m.ResourceTypeId
	}
	return 0
}

func (m *GrantType) GetGrantName() string {
	if m != nil {
		return m.GrantName
	}
	return ""
}

func (m *GrantType) GetGrantDesc() string {
	if m != nil {
		return m.GrantDesc
	}
	return ""
}

func (m *GrantType) GetCreateDt() *google_protobuf2.Timestamp {
	if m != nil {
		return m.CreateDt
	}
	return nil
}

func init() {
	proto.RegisterType((*SignUpRequest)(nil), "account.SignUpRequest")
	proto.RegisterType((*VerificationRequest)(nil), "account.VerificationRequest")
	proto.RegisterType((*LogInRequest)(nil), "account.LogInRequest")
	proto.RegisterType((*SessionReply)(nil), "account.SessionReply")
	proto.RegisterType((*OrganizationRequest)(nil), "account.OrganizationRequest")
	proto.RegisterType((*AccountsRequest)(nil), "account.AccountsRequest")
	proto.RegisterType((*AccountRequest)(nil), "account.AccountRequest")
	proto.RegisterType((*AccountInfo)(nil), "account.AccountInfo")
	proto.RegisterType((*Billing)(nil), "account.Billing")
	proto.RegisterType((*Settings)(nil), "account.Settings")
	proto.RegisterType((*AccountReply)(nil), "account.AccountReply")
	proto.RegisterType((*ListReply)(nil), "account.ListReply")
	proto.RegisterType((*EditRequest)(nil), "account.EditRequest")
	proto.RegisterType((*OrganizationMembershipsRequest)(nil), "account.OrganizationMembershipsRequest")
	proto.RegisterType((*TeamRequest)(nil), "account.TeamRequest")
	proto.RegisterType((*TeamReply)(nil), "account.TeamReply")
	proto.RegisterType((*TeamMembershipsRequest)(nil), "account.TeamMembershipsRequest")
	proto.RegisterType((*PermissionRequest)(nil), "account.PermissionRequest")
	proto.RegisterType((*Account)(nil), "account.Account")
	proto.RegisterType((*OrganizationMember)(nil), "account.OrganizationMember")
	proto.RegisterType((*Resource)(nil), "account.Resource")
	proto.RegisterType((*ResourceSettings)(nil), "account.ResourceSettings")
	proto.RegisterType((*Team)(nil), "account.Team")
	proto.RegisterType((*TeamMember)(nil), "account.TeamMember")
	proto.RegisterType((*Permission)(nil), "account.Permission")
	proto.RegisterType((*ResourceType)(nil), "account.ResourceType")
	proto.RegisterType((*GrantType)(nil), "account.GrantType")
	proto.RegisterEnum("account.AccountType", AccountType_name, AccountType_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for AccountService service

type AccountServiceClient interface {
	SignUp(ctx context.Context, in *SignUpRequest, opts ...grpc.CallOption) (*SessionReply, error)
	Verify(ctx context.Context, in *VerificationRequest, opts ...grpc.CallOption) (*google_protobuf1.Empty, error)
	CreateOrganization(ctx context.Context, in *OrganizationRequest, opts ...grpc.CallOption) (*google_protobuf1.Empty, error)
	Login(ctx context.Context, in *LogInRequest, opts ...grpc.CallOption) (*SessionReply, error)
	Switch(ctx context.Context, in *TeamRequest, opts ...grpc.CallOption) (*google_protobuf1.Empty, error)
	ListAccounts(ctx context.Context, in *AccountsRequest, opts ...grpc.CallOption) (*ListReply, error)
	GetAccountDetails(ctx context.Context, in *AccountRequest, opts ...grpc.CallOption) (*AccountReply, error)
	EditAccount(ctx context.Context, in *EditRequest, opts ...grpc.CallOption) (*AccountReply, error)
	DeleteAccount(ctx context.Context, in *AccountRequest, opts ...grpc.CallOption) (*google_protobuf1.Empty, error)
	AddOrganizationMemberships(ctx context.Context, in *OrganizationMembershipsRequest, opts ...grpc.CallOption) (*google_protobuf1.Empty, error)
	DeleteOrganizationMemberships(ctx context.Context, in *OrganizationMembershipsRequest, opts ...grpc.CallOption) (*google_protobuf1.Empty, error)
	CreateTeam(ctx context.Context, in *TeamRequest, opts ...grpc.CallOption) (*google_protobuf1.Empty, error)
	ListTeams(ctx context.Context, in *TeamRequest, opts ...grpc.CallOption) (*ListReply, error)
	EditTeam(ctx context.Context, in *TeamRequest, opts ...grpc.CallOption) (*google_protobuf1.Empty, error)
	GetTeamDetails(ctx context.Context, in *TeamRequest, opts ...grpc.CallOption) (*TeamReply, error)
	DeleteTeam(ctx context.Context, in *TeamRequest, opts ...grpc.CallOption) (*google_protobuf1.Empty, error)
	AddTeamMemberships(ctx context.Context, in *TeamMembershipsRequest, opts ...grpc.CallOption) (*google_protobuf1.Empty, error)
	DeleteTeamMemberships(ctx context.Context, in *TeamMembershipsRequest, opts ...grpc.CallOption) (*google_protobuf1.Empty, error)
	GrantPermission(ctx context.Context, in *PermissionRequest, opts ...grpc.CallOption) (*google_protobuf1.Empty, error)
	ListPermissions(ctx context.Context, in *PermissionRequest, opts ...grpc.CallOption) (*ListReply, error)
	EditPermission(ctx context.Context, in *PermissionRequest, opts ...grpc.CallOption) (*google_protobuf1.Empty, error)
	RevokePermission(ctx context.Context, in *PermissionRequest, opts ...grpc.CallOption) (*google_protobuf1.Empty, error)
	TransferOwnership(ctx context.Context, in *PermissionRequest, opts ...grpc.CallOption) (*google_protobuf1.Empty, error)
}

type accountServiceClient struct {
	cc *grpc.ClientConn
}

func NewAccountServiceClient(cc *grpc.ClientConn) AccountServiceClient {
	return &accountServiceClient{cc}
}

func (c *accountServiceClient) SignUp(ctx context.Context, in *SignUpRequest, opts ...grpc.CallOption) (*SessionReply, error) {
	out := new(SessionReply)
	err := grpc.Invoke(ctx, "/account.AccountService/SignUp", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountServiceClient) Verify(ctx context.Context, in *VerificationRequest, opts ...grpc.CallOption) (*google_protobuf1.Empty, error) {
	out := new(google_protobuf1.Empty)
	err := grpc.Invoke(ctx, "/account.AccountService/Verify", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountServiceClient) CreateOrganization(ctx context.Context, in *OrganizationRequest, opts ...grpc.CallOption) (*google_protobuf1.Empty, error) {
	out := new(google_protobuf1.Empty)
	err := grpc.Invoke(ctx, "/account.AccountService/CreateOrganization", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountServiceClient) Login(ctx context.Context, in *LogInRequest, opts ...grpc.CallOption) (*SessionReply, error) {
	out := new(SessionReply)
	err := grpc.Invoke(ctx, "/account.AccountService/Login", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountServiceClient) Switch(ctx context.Context, in *TeamRequest, opts ...grpc.CallOption) (*google_protobuf1.Empty, error) {
	out := new(google_protobuf1.Empty)
	err := grpc.Invoke(ctx, "/account.AccountService/Switch", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountServiceClient) ListAccounts(ctx context.Context, in *AccountsRequest, opts ...grpc.CallOption) (*ListReply, error) {
	out := new(ListReply)
	err := grpc.Invoke(ctx, "/account.AccountService/ListAccounts", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountServiceClient) GetAccountDetails(ctx context.Context, in *AccountRequest, opts ...grpc.CallOption) (*AccountReply, error) {
	out := new(AccountReply)
	err := grpc.Invoke(ctx, "/account.AccountService/GetAccountDetails", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountServiceClient) EditAccount(ctx context.Context, in *EditRequest, opts ...grpc.CallOption) (*AccountReply, error) {
	out := new(AccountReply)
	err := grpc.Invoke(ctx, "/account.AccountService/EditAccount", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountServiceClient) DeleteAccount(ctx context.Context, in *AccountRequest, opts ...grpc.CallOption) (*google_protobuf1.Empty, error) {
	out := new(google_protobuf1.Empty)
	err := grpc.Invoke(ctx, "/account.AccountService/DeleteAccount", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountServiceClient) AddOrganizationMemberships(ctx context.Context, in *OrganizationMembershipsRequest, opts ...grpc.CallOption) (*google_protobuf1.Empty, error) {
	out := new(google_protobuf1.Empty)
	err := grpc.Invoke(ctx, "/account.AccountService/AddOrganizationMemberships", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountServiceClient) DeleteOrganizationMemberships(ctx context.Context, in *OrganizationMembershipsRequest, opts ...grpc.CallOption) (*google_protobuf1.Empty, error) {
	out := new(google_protobuf1.Empty)
	err := grpc.Invoke(ctx, "/account.AccountService/DeleteOrganizationMemberships", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountServiceClient) CreateTeam(ctx context.Context, in *TeamRequest, opts ...grpc.CallOption) (*google_protobuf1.Empty, error) {
	out := new(google_protobuf1.Empty)
	err := grpc.Invoke(ctx, "/account.AccountService/CreateTeam", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountServiceClient) ListTeams(ctx context.Context, in *TeamRequest, opts ...grpc.CallOption) (*ListReply, error) {
	out := new(ListReply)
	err := grpc.Invoke(ctx, "/account.AccountService/ListTeams", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountServiceClient) EditTeam(ctx context.Context, in *TeamRequest, opts ...grpc.CallOption) (*google_protobuf1.Empty, error) {
	out := new(google_protobuf1.Empty)
	err := grpc.Invoke(ctx, "/account.AccountService/EditTeam", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountServiceClient) GetTeamDetails(ctx context.Context, in *TeamRequest, opts ...grpc.CallOption) (*TeamReply, error) {
	out := new(TeamReply)
	err := grpc.Invoke(ctx, "/account.AccountService/GetTeamDetails", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountServiceClient) DeleteTeam(ctx context.Context, in *TeamRequest, opts ...grpc.CallOption) (*google_protobuf1.Empty, error) {
	out := new(google_protobuf1.Empty)
	err := grpc.Invoke(ctx, "/account.AccountService/DeleteTeam", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountServiceClient) AddTeamMemberships(ctx context.Context, in *TeamMembershipsRequest, opts ...grpc.CallOption) (*google_protobuf1.Empty, error) {
	out := new(google_protobuf1.Empty)
	err := grpc.Invoke(ctx, "/account.AccountService/AddTeamMemberships", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountServiceClient) DeleteTeamMemberships(ctx context.Context, in *TeamMembershipsRequest, opts ...grpc.CallOption) (*google_protobuf1.Empty, error) {
	out := new(google_protobuf1.Empty)
	err := grpc.Invoke(ctx, "/account.AccountService/DeleteTeamMemberships", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountServiceClient) GrantPermission(ctx context.Context, in *PermissionRequest, opts ...grpc.CallOption) (*google_protobuf1.Empty, error) {
	out := new(google_protobuf1.Empty)
	err := grpc.Invoke(ctx, "/account.AccountService/GrantPermission", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountServiceClient) ListPermissions(ctx context.Context, in *PermissionRequest, opts ...grpc.CallOption) (*ListReply, error) {
	out := new(ListReply)
	err := grpc.Invoke(ctx, "/account.AccountService/ListPermissions", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountServiceClient) EditPermission(ctx context.Context, in *PermissionRequest, opts ...grpc.CallOption) (*google_protobuf1.Empty, error) {
	out := new(google_protobuf1.Empty)
	err := grpc.Invoke(ctx, "/account.AccountService/EditPermission", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountServiceClient) RevokePermission(ctx context.Context, in *PermissionRequest, opts ...grpc.CallOption) (*google_protobuf1.Empty, error) {
	out := new(google_protobuf1.Empty)
	err := grpc.Invoke(ctx, "/account.AccountService/RevokePermission", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountServiceClient) TransferOwnership(ctx context.Context, in *PermissionRequest, opts ...grpc.CallOption) (*google_protobuf1.Empty, error) {
	out := new(google_protobuf1.Empty)
	err := grpc.Invoke(ctx, "/account.AccountService/TransferOwnership", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for AccountService service

type AccountServiceServer interface {
	SignUp(context.Context, *SignUpRequest) (*SessionReply, error)
	Verify(context.Context, *VerificationRequest) (*google_protobuf1.Empty, error)
	CreateOrganization(context.Context, *OrganizationRequest) (*google_protobuf1.Empty, error)
	Login(context.Context, *LogInRequest) (*SessionReply, error)
	Switch(context.Context, *TeamRequest) (*google_protobuf1.Empty, error)
	ListAccounts(context.Context, *AccountsRequest) (*ListReply, error)
	GetAccountDetails(context.Context, *AccountRequest) (*AccountReply, error)
	EditAccount(context.Context, *EditRequest) (*AccountReply, error)
	DeleteAccount(context.Context, *AccountRequest) (*google_protobuf1.Empty, error)
	AddOrganizationMemberships(context.Context, *OrganizationMembershipsRequest) (*google_protobuf1.Empty, error)
	DeleteOrganizationMemberships(context.Context, *OrganizationMembershipsRequest) (*google_protobuf1.Empty, error)
	CreateTeam(context.Context, *TeamRequest) (*google_protobuf1.Empty, error)
	ListTeams(context.Context, *TeamRequest) (*ListReply, error)
	EditTeam(context.Context, *TeamRequest) (*google_protobuf1.Empty, error)
	GetTeamDetails(context.Context, *TeamRequest) (*TeamReply, error)
	DeleteTeam(context.Context, *TeamRequest) (*google_protobuf1.Empty, error)
	AddTeamMemberships(context.Context, *TeamMembershipsRequest) (*google_protobuf1.Empty, error)
	DeleteTeamMemberships(context.Context, *TeamMembershipsRequest) (*google_protobuf1.Empty, error)
	GrantPermission(context.Context, *PermissionRequest) (*google_protobuf1.Empty, error)
	ListPermissions(context.Context, *PermissionRequest) (*ListReply, error)
	EditPermission(context.Context, *PermissionRequest) (*google_protobuf1.Empty, error)
	RevokePermission(context.Context, *PermissionRequest) (*google_protobuf1.Empty, error)
	TransferOwnership(context.Context, *PermissionRequest) (*google_protobuf1.Empty, error)
}

func RegisterAccountServiceServer(s *grpc.Server, srv AccountServiceServer) {
	s.RegisterService(&_AccountService_serviceDesc, srv)
}

func _AccountService_SignUp_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SignUpRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountServiceServer).SignUp(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/account.AccountService/SignUp",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountServiceServer).SignUp(ctx, req.(*SignUpRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AccountService_Verify_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(VerificationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountServiceServer).Verify(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/account.AccountService/Verify",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountServiceServer).Verify(ctx, req.(*VerificationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AccountService_CreateOrganization_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OrganizationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountServiceServer).CreateOrganization(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/account.AccountService/CreateOrganization",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountServiceServer).CreateOrganization(ctx, req.(*OrganizationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AccountService_Login_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LogInRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountServiceServer).Login(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/account.AccountService/Login",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountServiceServer).Login(ctx, req.(*LogInRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AccountService_Switch_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TeamRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountServiceServer).Switch(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/account.AccountService/Switch",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountServiceServer).Switch(ctx, req.(*TeamRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AccountService_ListAccounts_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AccountsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountServiceServer).ListAccounts(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/account.AccountService/ListAccounts",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountServiceServer).ListAccounts(ctx, req.(*AccountsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AccountService_GetAccountDetails_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AccountRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountServiceServer).GetAccountDetails(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/account.AccountService/GetAccountDetails",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountServiceServer).GetAccountDetails(ctx, req.(*AccountRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AccountService_EditAccount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EditRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountServiceServer).EditAccount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/account.AccountService/EditAccount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountServiceServer).EditAccount(ctx, req.(*EditRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AccountService_DeleteAccount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AccountRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountServiceServer).DeleteAccount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/account.AccountService/DeleteAccount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountServiceServer).DeleteAccount(ctx, req.(*AccountRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AccountService_AddOrganizationMemberships_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OrganizationMembershipsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountServiceServer).AddOrganizationMemberships(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/account.AccountService/AddOrganizationMemberships",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountServiceServer).AddOrganizationMemberships(ctx, req.(*OrganizationMembershipsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AccountService_DeleteOrganizationMemberships_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OrganizationMembershipsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountServiceServer).DeleteOrganizationMemberships(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/account.AccountService/DeleteOrganizationMemberships",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountServiceServer).DeleteOrganizationMemberships(ctx, req.(*OrganizationMembershipsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AccountService_CreateTeam_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TeamRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountServiceServer).CreateTeam(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/account.AccountService/CreateTeam",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountServiceServer).CreateTeam(ctx, req.(*TeamRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AccountService_ListTeams_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TeamRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountServiceServer).ListTeams(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/account.AccountService/ListTeams",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountServiceServer).ListTeams(ctx, req.(*TeamRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AccountService_EditTeam_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TeamRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountServiceServer).EditTeam(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/account.AccountService/EditTeam",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountServiceServer).EditTeam(ctx, req.(*TeamRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AccountService_GetTeamDetails_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TeamRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountServiceServer).GetTeamDetails(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/account.AccountService/GetTeamDetails",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountServiceServer).GetTeamDetails(ctx, req.(*TeamRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AccountService_DeleteTeam_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TeamRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountServiceServer).DeleteTeam(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/account.AccountService/DeleteTeam",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountServiceServer).DeleteTeam(ctx, req.(*TeamRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AccountService_AddTeamMemberships_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TeamMembershipsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountServiceServer).AddTeamMemberships(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/account.AccountService/AddTeamMemberships",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountServiceServer).AddTeamMemberships(ctx, req.(*TeamMembershipsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AccountService_DeleteTeamMemberships_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TeamMembershipsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountServiceServer).DeleteTeamMemberships(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/account.AccountService/DeleteTeamMemberships",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountServiceServer).DeleteTeamMemberships(ctx, req.(*TeamMembershipsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AccountService_GrantPermission_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PermissionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountServiceServer).GrantPermission(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/account.AccountService/GrantPermission",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountServiceServer).GrantPermission(ctx, req.(*PermissionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AccountService_ListPermissions_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PermissionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountServiceServer).ListPermissions(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/account.AccountService/ListPermissions",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountServiceServer).ListPermissions(ctx, req.(*PermissionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AccountService_EditPermission_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PermissionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountServiceServer).EditPermission(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/account.AccountService/EditPermission",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountServiceServer).EditPermission(ctx, req.(*PermissionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AccountService_RevokePermission_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PermissionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountServiceServer).RevokePermission(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/account.AccountService/RevokePermission",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountServiceServer).RevokePermission(ctx, req.(*PermissionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AccountService_TransferOwnership_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PermissionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountServiceServer).TransferOwnership(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/account.AccountService/TransferOwnership",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountServiceServer).TransferOwnership(ctx, req.(*PermissionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _AccountService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "account.AccountService",
	HandlerType: (*AccountServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SignUp",
			Handler:    _AccountService_SignUp_Handler,
		},
		{
			MethodName: "Verify",
			Handler:    _AccountService_Verify_Handler,
		},
		{
			MethodName: "CreateOrganization",
			Handler:    _AccountService_CreateOrganization_Handler,
		},
		{
			MethodName: "Login",
			Handler:    _AccountService_Login_Handler,
		},
		{
			MethodName: "Switch",
			Handler:    _AccountService_Switch_Handler,
		},
		{
			MethodName: "ListAccounts",
			Handler:    _AccountService_ListAccounts_Handler,
		},
		{
			MethodName: "GetAccountDetails",
			Handler:    _AccountService_GetAccountDetails_Handler,
		},
		{
			MethodName: "EditAccount",
			Handler:    _AccountService_EditAccount_Handler,
		},
		{
			MethodName: "DeleteAccount",
			Handler:    _AccountService_DeleteAccount_Handler,
		},
		{
			MethodName: "AddOrganizationMemberships",
			Handler:    _AccountService_AddOrganizationMemberships_Handler,
		},
		{
			MethodName: "DeleteOrganizationMemberships",
			Handler:    _AccountService_DeleteOrganizationMemberships_Handler,
		},
		{
			MethodName: "CreateTeam",
			Handler:    _AccountService_CreateTeam_Handler,
		},
		{
			MethodName: "ListTeams",
			Handler:    _AccountService_ListTeams_Handler,
		},
		{
			MethodName: "EditTeam",
			Handler:    _AccountService_EditTeam_Handler,
		},
		{
			MethodName: "GetTeamDetails",
			Handler:    _AccountService_GetTeamDetails_Handler,
		},
		{
			MethodName: "DeleteTeam",
			Handler:    _AccountService_DeleteTeam_Handler,
		},
		{
			MethodName: "AddTeamMemberships",
			Handler:    _AccountService_AddTeamMemberships_Handler,
		},
		{
			MethodName: "DeleteTeamMemberships",
			Handler:    _AccountService_DeleteTeamMemberships_Handler,
		},
		{
			MethodName: "GrantPermission",
			Handler:    _AccountService_GrantPermission_Handler,
		},
		{
			MethodName: "ListPermissions",
			Handler:    _AccountService_ListPermissions_Handler,
		},
		{
			MethodName: "EditPermission",
			Handler:    _AccountService_EditPermission_Handler,
		},
		{
			MethodName: "RevokePermission",
			Handler:    _AccountService_RevokePermission_Handler,
		},
		{
			MethodName: "TransferOwnership",
			Handler:    _AccountService_TransferOwnership_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "github.com/appcelerator/amp/api/rpc/account/account.proto",
}

func init() {
	proto.RegisterFile("github.com/appcelerator/amp/api/rpc/account/account.proto", fileDescriptor0)
}

var fileDescriptor0 = []byte{
	// 1823 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xb4, 0x58, 0x4f, 0x73, 0x1b, 0x49,
	0x15, 0x67, 0x24, 0xd9, 0x92, 0x9e, 0x64, 0xd9, 0xee, 0x38, 0x89, 0xa2, 0x5d, 0xdb, 0xc9, 0xac,
	0x93, 0x35, 0x62, 0xb1, 0xb0, 0xb6, 0x0a, 0x6a, 0xa9, 0x5d, 0xb6, 0xbc, 0xeb, 0x94, 0xd7, 0x60,
	0xec, 0x45, 0x76, 0xb6, 0x8a, 0x2d, 0x82, 0x6a, 0x3c, 0xd3, 0x96, 0x3b, 0x91, 0x66, 0x26, 0x33,
	0x23, 0x3b, 0x4a, 0x70, 0x51, 0x84, 0x43, 0x0e, 0x39, 0x10, 0x8a, 0x82, 0x1b, 0x87, 0x50, 0x9c,
	0xe0, 0x2b, 0xf0, 0x09, 0xb8, 0xf2, 0x15, 0x38, 0xf0, 0x31, 0xa8, 0x7e, 0xdd, 0x33, 0x6a, 0x69,
	0x46, 0xb2, 0x65, 0x27, 0x97, 0x64, 0xba, 0xfb, 0xe9, 0xfd, 0x7e, 0xef, 0x4f, 0xbf, 0x7e, 0xcf,
	0xf0, 0x49, 0x8b, 0x05, 0xc7, 0xdd, 0xc3, 0x35, 0xd3, 0xe9, 0xd4, 0x0c, 0xd7, 0x35, 0x69, 0x9b,
	0x7a, 0x46, 0xe0, 0x78, 0x35, 0xa3, 0xe3, 0xd6, 0x0c, 0x97, 0xd5, 0x3c, 0xd7, 0xac, 0x19, 0xa6,
	0xe9, 0x74, 0xed, 0x20, 0xfc, 0x7f, 0xcd, 0xf5, 0x9c, 0xc0, 0x21, 0x59, 0xb9, 0xac, 0xbc, 0xdf,
	0x72, 0x9c, 0x56, 0x9b, 0xa2, 0xb8, 0x61, 0xdb, 0x4e, 0x60, 0x04, 0xcc, 0xb1, 0x7d, 0x21, 0x56,
	0x79, 0x4f, 0x9e, 0xe2, 0xea, 0xb0, 0x7b, 0x54, 0xa3, 0x1d, 0x37, 0xe8, 0xc9, 0xc3, 0xe5, 0xe1,
	0xc3, 0x80, 0x75, 0xa8, 0x1f, 0x18, 0x1d, 0x57, 0x08, 0xe8, 0x0f, 0x60, 0x66, 0x9f, 0xb5, 0xec,
	0x07, 0x6e, 0x83, 0x3e, 0xe9, 0x52, 0x3f, 0x20, 0x04, 0x32, 0xb6, 0xd1, 0xa1, 0x65, 0xed, 0xb6,
	0xb6, 0x9a, 0x6f, 0xe0, 0x37, 0x59, 0x80, 0x29, 0xda, 0x31, 0x58, 0xbb, 0x9c, 0xc2, 0x4d, 0xb1,
	0x20, 0x15, 0xc8, 0xb9, 0x86, 0xef, 0x9f, 0x3a, 0x9e, 0x55, 0x4e, 0xe3, 0x41, 0xb4, 0xd6, 0x3f,
	0x83, 0x6b, 0xdf, 0x50, 0x8f, 0x1d, 0x31, 0x13, 0xb9, 0x8e, 0x53, 0x4e, 0x20, 0x63, 0x3a, 0x16,
	0x95, 0xba, 0xf1, 0x5b, 0xff, 0x09, 0x14, 0x77, 0x9c, 0xd6, 0xf6, 0xd8, 0xdf, 0xa9, 0xf0, 0xa9,
	0x21, 0xf8, 0x35, 0x28, 0xee, 0x53, 0xdf, 0x47, 0x64, 0xb7, 0xdd, 0x23, 0x4b, 0x00, 0xbe, 0x58,
	0xff, 0x8c, 0xf6, 0xa4, 0x16, 0x65, 0x47, 0xff, 0x1c, 0xae, 0xed, 0x79, 0x2d, 0xc3, 0x66, 0xcf,
	0xce, 0xa5, 0x9b, 0xe8, 0x0b, 0xfd, 0x21, 0xcc, 0x6e, 0x88, 0x68, 0xf9, 0xca, 0x8f, 0x83, 0x9e,
	0x1b, 0xfd, 0x98, 0x7f, 0x13, 0x1d, 0x8a, 0x8e, 0x82, 0x23, 0x75, 0x0c, 0xec, 0xe1, 0xef, 0xa8,
	0xd1, 0x91, 0x2e, 0xc5, 0x6f, 0x7d, 0x05, 0x4a, 0x52, 0xfd, 0x18, 0x6a, 0xfa, 0xef, 0x34, 0x28,
	0x48, 0xb1, 0x6d, 0xfb, 0xc8, 0x99, 0x20, 0x94, 0x77, 0xa1, 0x84, 0x1f, 0xcd, 0x13, 0x0c, 0x1a,
	0x15, 0x01, 0xcd, 0x35, 0x66, 0x70, 0xf7, 0x1b, 0xb9, 0x49, 0xee, 0x40, 0x51, 0xe6, 0x64, 0x13,
	0x4d, 0xcb, 0xa0, 0x8e, 0x82, 0xdc, 0x3b, 0xe8, 0xb9, 0x54, 0xff, 0x77, 0x0a, 0xb2, 0x5f, 0xb0,
	0x76, 0x9b, 0xd9, 0x2d, 0x52, 0x86, 0xac, 0xe9, 0xd8, 0x81, 0x61, 0x06, 0x92, 0x42, 0xb8, 0x24,
	0x2b, 0x50, 0x32, 0x2c, 0xcb, 0xa3, 0xbe, 0xdf, 0x6c, 0x33, 0x9b, 0x36, 0xd7, 0x43, 0x4f, 0xc8,
	0xdd, 0x1d, 0x66, 0xd3, 0xf5, 0x98, 0x54, 0x5d, 0xfa, 0x44, 0x95, 0xaa, 0x63, 0xfe, 0xb0, 0xa0,
	0x27, 0xc9, 0xe0, 0x37, 0xb7, 0xd2, 0x0f, 0x8c, 0x80, 0x96, 0xa7, 0x84, 0x95, 0xb8, 0x20, 0xb7,
	0x20, 0xf7, 0x8c, 0xb9, 0x4d, 0xcc, 0xb6, 0x69, 0x41, 0xe8, 0x19, 0x73, 0xbf, 0x74, 0x2c, 0xca,
	0x2d, 0x73, 0x8f, 0x1d, 0x9b, 0x36, 0xed, 0x6e, 0xe7, 0x90, 0x7a, 0xe5, 0xac, 0xb0, 0x0c, 0xf7,
	0x76, 0x71, 0x8b, 0x2c, 0x02, 0x1c, 0x19, 0x4f, 0x43, 0x81, 0x1c, 0x0a, 0xe4, 0x8f, 0x8c, 0xa7,
	0xf2, 0x38, 0x72, 0x6c, 0x5e, 0x75, 0xec, 0x7b, 0x90, 0x37, 0x0d, 0xcf, 0x12, 0xee, 0x02, 0x91,
	0xa5, 0x7c, 0x83, 0xfb, 0x8a, 0x2c, 0x43, 0x01, 0x0f, 0xa5, 0xca, 0x82, 0x48, 0x4b, 0xbe, 0x25,
	0x74, 0xea, 0x4b, 0x90, 0xdb, 0xa7, 0x41, 0xc0, 0xec, 0x96, 0xcf, 0xcd, 0x74, 0xdb, 0x86, 0x1d,
	0x06, 0x93, 0x7f, 0xeb, 0x7f, 0xd6, 0xa0, 0x18, 0xe5, 0x05, 0xcf, 0xf3, 0x2a, 0x84, 0x45, 0x03,
	0xe5, 0x0a, 0xf5, 0xb9, 0xb5, 0xb0, 0xa6, 0x84, 0x72, 0xa1, 0x00, 0x97, 0x3d, 0x14, 0x81, 0x42,
	0xe7, 0xab, 0xb2, 0x32, 0x80, 0x8d, 0x50, 0x80, 0x7c, 0x1f, 0x72, 0xbe, 0x24, 0x82, 0x31, 0x28,
	0xd4, 0xe7, 0x23, 0xe1, 0x90, 0x61, 0x23, 0x12, 0xd1, 0xdf, 0x68, 0x90, 0xdf, 0x61, 0xbe, 0x24,
	0xf5, 0x11, 0xe4, 0xa4, 0xac, 0x5f, 0xd6, 0x6e, 0xa7, 0x13, 0x59, 0x45, 0x12, 0x64, 0x15, 0xa6,
	0x78, 0xca, 0xfb, 0xe5, 0x14, 0x8a, 0x92, 0x48, 0xf4, 0x80, 0x1a, 0x1d, 0x54, 0xd8, 0x10, 0x02,
	0xe4, 0x53, 0x28, 0xb8, 0xd4, 0xeb, 0x30, 0xbc, 0xc5, 0x9c, 0x17, 0x97, 0xaf, 0x44, 0xf2, 0x5f,
	0x47, 0x67, 0xf2, 0xce, 0x34, 0x54, 0x71, 0xfd, 0x6f, 0x1a, 0x14, 0xee, 0x5b, 0x2c, 0x78, 0xab,
	0x75, 0x8f, 0xe7, 0x91, 0x4d, 0x4f, 0x9b, 0xd1, 0xb9, 0xbc, 0x21, 0x36, 0x3d, 0xfd, 0x3a, 0x14,
	0x51, 0xfc, 0x3e, 0x75, 0x8e, 0xdf, 0xf5, 0x5d, 0x58, 0x52, 0xeb, 0xd2, 0xcf, 0x29, 0x4f, 0x0b,
	0xff, 0x98, 0xb9, 0xfe, 0x38, 0xda, 0x65, 0xc8, 0x4a, 0x49, 0x74, 0x62, 0xbe, 0x11, 0x2e, 0xf5,
	0x16, 0x14, 0x84, 0x1b, 0x47, 0xff, 0xf8, 0x36, 0x14, 0x2c, 0xea, 0x9b, 0x1e, 0x73, 0x95, 0x0a,
	0xa5, 0x6e, 0xc5, 0x8a, 0x58, 0x3a, 0x5e, 0xc4, 0xf4, 0xdf, 0x42, 0x3e, 0x8a, 0xd7, 0xbb, 0x83,
	0xe1, 0x96, 0x76, 0xa4, 0xa5, 0x19, 0x61, 0xa9, 0x5c, 0xea, 0x8f, 0xe0, 0x06, 0x27, 0x70, 0x41,
	0x8f, 0x5d, 0xa4, 0x2e, 0x2b, 0x5e, 0x4d, 0x0f, 0x7a, 0xf5, 0x85, 0x06, 0xf3, 0xb1, 0x6c, 0x8b,
	0xea, 0xb8, 0xd6, 0xaf, 0xe3, 0x17, 0xc2, 0x59, 0x80, 0xa9, 0x36, 0x3d, 0xa1, 0x6d, 0x69, 0xb0,
	0x58, 0xf0, 0x5a, 0xe1, 0x51, 0xdf, 0xe9, 0x7a, 0x26, 0x6d, 0xb2, 0x30, 0xaf, 0x20, 0xdc, 0xda,
	0xb6, 0xf4, 0xff, 0x69, 0x90, 0x95, 0xb7, 0x89, 0x94, 0x20, 0xc5, 0x2c, 0x04, 0x4e, 0x37, 0x52,
	0xcc, 0x8a, 0x4c, 0x4e, 0x29, 0x26, 0xaf, 0xca, 0xe7, 0x89, 0xa3, 0x94, 0xea, 0x0b, 0xc3, 0x37,
	0x92, 0x17, 0x28, 0xf9, 0x68, 0x45, 0xb7, 0x20, 0xa3, 0xde, 0x82, 0x65, 0x28, 0xb8, 0xa7, 0xcd,
	0x63, 0xc3, 0x3f, 0xc6, 0x7a, 0x2a, 0x0a, 0x2d, 0xb8, 0xa7, 0x5f, 0xc9, 0x1d, 0x2e, 0xc0, 0xfc,
	0xfe, 0x83, 0x32, 0x8d, 0x0f, 0x0a, 0x30, 0x3f, 0x7a, 0x4d, 0x7e, 0x04, 0x79, 0xd3, 0xa3, 0x46,
	0x40, 0x9b, 0x56, 0x80, 0x05, 0x97, 0xdf, 0x5e, 0xd1, 0xaf, 0xac, 0x85, 0xfd, 0xca, 0xda, 0x41,
	0xd8, 0xaf, 0x34, 0x72, 0x42, 0x78, 0x33, 0xd0, 0xff, 0xa9, 0x01, 0x89, 0x5f, 0x8b, 0x98, 0xd5,
	0x2b, 0x50, 0x72, 0xbc, 0x56, 0x33, 0x7c, 0xb1, 0x98, 0x68, 0x13, 0xd2, 0xe8, 0xee, 0xf0, 0x99,
	0xb4, 0xc8, 0x3d, 0x98, 0xed, 0xfa, 0xd4, 0x53, 0xc5, 0xd2, 0x28, 0x36, 0xc3, 0xb7, 0xfb, 0x72,
	0x03, 0x6c, 0x33, 0x13, 0xb0, 0x7d, 0xa3, 0x41, 0xae, 0x21, 0xe3, 0x74, 0x49, 0x8e, 0x61, 0xfc,
	0xd2, 0x83, 0x6d, 0x93, 0xf2, 0x06, 0x8b, 0x48, 0x0d, 0x70, 0x9c, 0x9a, 0x80, 0xe3, 0xdf, 0x35,
	0x98, 0x0b, 0x39, 0x46, 0x2f, 0xce, 0x30, 0xd7, 0xa1, 0x14, 0x14, 0x44, 0x95, 0x14, 0x24, 0x73,
	0x90, 0x7e, 0x4c, 0x7b, 0x92, 0x25, 0xff, 0xe4, 0xa9, 0x73, 0x62, 0xb4, 0xbb, 0x21, 0x4b, 0xb1,
	0xb8, 0x3c, 0xcd, 0xbf, 0x6a, 0x90, 0xe1, 0xb7, 0xfa, 0xed, 0xba, 0x91, 0x17, 0x9d, 0xd0, 0x8d,
	0xfc, 0xfb, 0xf2, 0xfc, 0xfe, 0xa2, 0x01, 0xf4, 0xab, 0x4e, 0x8c, 0x65, 0x42, 0xaa, 0xa5, 0x92,
	0x52, 0xed, 0x26, 0x64, 0x79, 0xb5, 0xe8, 0xa7, 0xe2, 0x34, 0x5f, 0x0e, 0xe7, 0xe0, 0x24, 0xc4,
	0xfe, 0xa1, 0x01, 0xf4, 0x2b, 0x54, 0x8c, 0x98, 0x02, 0x98, 0x1a, 0x00, 0x1c, 0x0a, 0x79, 0x3a,
	0x16, 0xf2, 0x5b, 0x90, 0x6b, 0x79, 0x86, 0xb0, 0x25, 0x83, 0xa7, 0x59, 0x5c, 0x5f, 0x85, 0xec,
	0x1b, 0x0d, 0x8a, 0x61, 0x32, 0x62, 0x9f, 0x34, 0x4c, 0xf7, 0x03, 0x98, 0x89, 0x58, 0x29, 0x01,
	0x2d, 0x86, 0x9b, 0xbb, 0x3c, 0xb0, 0xaa, 0x90, 0x12, 0xe1, 0x48, 0x68, 0xf3, 0x4a, 0x91, 0xfe,
	0x97, 0x06, 0xf9, 0x2d, 0x6e, 0x68, 0x22, 0xc1, 0x55, 0x98, 0x8b, 0xb0, 0xf9, 0xc5, 0xec, 0x3b,
	0xb6, 0xe4, 0x29, 0x86, 0x6d, 0x5b, 0xbc, 0xa9, 0x14, 0xfe, 0x53, 0xec, 0xc8, 0xe3, 0x0e, 0x1a,
	0x11, 0x1d, 0x2b, 0x16, 0x88, 0xe3, 0x2b, 0xd1, 0xaf, 0x7e, 0x37, 0x1a, 0x14, 0x90, 0x7f, 0x0e,
	0x32, 0x0f, 0xf6, 0xef, 0x37, 0xe6, 0xbe, 0x43, 0xe6, 0xa0, 0xb8, 0xd7, 0xd8, 0xda, 0xd8, 0xdd,
	0xfe, 0x76, 0xe3, 0x60, 0x7b, 0x6f, 0x77, 0x4e, 0xab, 0xbf, 0xbe, 0x1e, 0xcd, 0x1e, 0xfb, 0xd4,
	0x3b, 0x61, 0x26, 0x25, 0x0f, 0x61, 0x5a, 0xcc, 0x8c, 0xe4, 0x46, 0xbf, 0x0b, 0x54, 0x87, 0xc8,
	0xca, 0x75, 0xa5, 0x3b, 0xec, 0x8f, 0x61, 0xfa, 0xca, 0x8b, 0xff, 0xfc, 0xf7, 0x4f, 0xa9, 0x25,
	0xfd, 0x56, 0xed, 0x64, 0x3d, 0x1a, 0x7a, 0x9f, 0x73, 0xd3, 0xcf, 0x6a, 0x3e, 0x6b, 0xd9, 0x5d,
	0xf7, 0xc7, 0x5a, 0x95, 0x3c, 0x81, 0x69, 0x7c, 0x23, 0x7a, 0xe4, 0xfd, 0x48, 0x4d, 0xc2, 0x30,
	0x59, 0xb9, 0x11, 0x33, 0xf5, 0x3e, 0x9f, 0x7c, 0xf5, 0x75, 0x44, 0xf9, 0x9e, 0x7e, 0x2f, 0x01,
	0xe5, 0x44, 0xd1, 0x53, 0x7b, 0xce, 0xdf, 0xa9, 0x33, 0x0e, 0xf9, 0x1b, 0x20, 0x5f, 0xa2, 0x6f,
	0xd4, 0x67, 0x45, 0x81, 0x4f, 0x18, 0x0e, 0x47, 0xc2, 0xff, 0x00, 0xe1, 0xab, 0xfa, 0xdd, 0x04,
	0x78, 0x33, 0x06, 0xc2, 0xd1, 0xbf, 0x85, 0xa9, 0x1d, 0xa7, 0xc5, 0x6c, 0xd2, 0x77, 0x9b, 0x3a,
	0xfd, 0x8e, 0xf2, 0xe6, 0x07, 0x08, 0xb4, 0xa8, 0x97, 0x13, 0x80, 0xda, 0x5c, 0x1f, 0xd7, 0x6d,
	0xc1, 0xf4, 0xfe, 0x29, 0x0b, 0xcc, 0x63, 0xb2, 0x30, 0xd4, 0x49, 0x8f, 0xb7, 0xe2, 0x23, 0x54,
	0x7e, 0xaf, 0x72, 0x67, 0x40, 0xb9, 0xda, 0xa8, 0x9c, 0xd5, 0x7c, 0x54, 0xcc, 0x51, 0x7e, 0x01,
	0x45, 0xde, 0xef, 0x87, 0x23, 0x30, 0x29, 0x0f, 0xb7, 0x13, 0x61, 0xf7, 0x55, 0xe9, 0xf7, 0xf3,
	0xd1, 0x80, 0xa0, 0x5f, 0x43, 0xac, 0x19, 0x52, 0x50, 0xb0, 0x48, 0x13, 0xe6, 0xb7, 0x68, 0xa8,
	0x71, 0x93, 0x06, 0x06, 0x6b, 0xfb, 0xe4, 0x66, 0x6c, 0x70, 0x88, 0xb9, 0x48, 0x9d, 0x87, 0xf4,
	0x0a, 0x6a, 0x5e, 0x20, 0x24, 0xee, 0x22, 0xf2, 0x4b, 0xd1, 0xff, 0x87, 0x3d, 0x53, 0xdf, 0x3d,
	0xca, 0x54, 0x30, 0x4a, 0xef, 0x22, 0xea, 0xbd, 0x59, 0x49, 0xd0, 0xcb, 0xdd, 0xf1, 0x2b, 0x98,
	0xd9, 0xa4, 0x6d, 0x1a, 0xd0, 0x50, 0xf9, 0x48, 0xde, 0xa3, 0xdc, 0x2f, 0x89, 0x57, 0x93, 0x88,
	0xbf, 0xd4, 0xa0, 0xb2, 0x61, 0x59, 0x23, 0x06, 0x03, 0xf2, 0x61, 0x62, 0xd6, 0xc6, 0x1b, 0xe1,
	0x91, 0xd8, 0xab, 0x88, 0xad, 0xd7, 0x17, 0x13, 0xf2, 0xaa, 0x13, 0xa9, 0xe1, 0x76, 0xbe, 0xd4,
	0x60, 0x51, 0x18, 0xfa, 0xce, 0xc8, 0xdc, 0x45, 0x32, 0xcb, 0xd5, 0xf1, 0x64, 0x48, 0x07, 0x40,
	0x5c, 0x60, 0x6c, 0x0f, 0x26, 0x4b, 0xf5, 0xe4, 0x7a, 0x31, 0x98, 0xea, 0xfc, 0x3d, 0x54, 0x02,
	0xfc, 0x6b, 0x31, 0xdf, 0x1e, 0xe0, 0x1c, 0x9a, 0x8c, 0x96, 0x94, 0xe8, 0x1f, 0x22, 0xd2, 0x1d,
	0xb2, 0x7c, 0x0e, 0x12, 0x79, 0x0c, 0x39, 0x9e, 0x85, 0x97, 0x37, 0xa6, 0x32, 0x81, 0x31, 0x8f,
	0xa0, 0xb4, 0x45, 0x11, 0x2b, 0xbc, 0x66, 0xe7, 0x59, 0x14, 0x8d, 0x76, 0xfa, 0x1a, 0xc2, 0xad,
	0x92, 0x0b, 0xc2, 0x91, 0x47, 0x00, 0x22, 0x61, 0x2e, 0x61, 0x9a, 0xc4, 0xaa, 0x5e, 0x14, 0xeb,
	0x95, 0x06, 0x64, 0xc3, 0xb2, 0x86, 0xc6, 0x40, 0xb2, 0x3c, 0x00, 0x3a, 0x41, 0x2a, 0x7e, 0x8a,
	0xf8, 0x3f, 0xac, 0xaf, 0x5f, 0x0c, 0x7f, 0xe8, 0xae, 0xbc, 0xd2, 0xe0, 0x7a, 0xdf, 0xf4, 0xb7,
	0x42, 0xe8, 0x13, 0x24, 0xf4, 0x71, 0x75, 0x72, 0x42, 0xe4, 0xf7, 0x1a, 0xcc, 0x62, 0xff, 0xa2,
	0x74, 0x85, 0x63, 0xfe, 0x74, 0x72, 0x9e, 0x4f, 0xf4, 0xf3, 0x29, 0xf0, 0x7f, 0xcf, 0x6a, 0xfd,
	0xbf, 0xc0, 0x88, 0x67, 0x77, 0x96, 0x5f, 0x8e, 0x3e, 0x9c, 0x3f, 0x96, 0x44, 0xd2, 0x95, 0x92,
	0x3e, 0x20, 0x93, 0x13, 0x20, 0xaf, 0x35, 0x28, 0xf1, 0x5b, 0x76, 0x45, 0x17, 0xfc, 0x14, 0x19,
	0x6c, 0x56, 0x3e, 0x9f, 0x98, 0x41, 0xed, 0xb9, 0xd2, 0x5c, 0xe3, 0x55, 0xfc, 0x03, 0xce, 0x61,
	0x27, 0xce, 0x63, 0x7a, 0x45, 0x52, 0x5b, 0x48, 0x6a, 0xa3, 0x7a, 0x55, 0x52, 0xe4, 0x8f, 0x1a,
	0xcc, 0x1f, 0x78, 0x86, 0xed, 0x1f, 0x51, 0x6f, 0xef, 0xd4, 0x96, 0xe9, 0x73, 0x19, 0x4a, 0x5f,
	0x21, 0xa5, 0x2f, 0xf4, 0xcf, 0x2e, 0x48, 0x29, 0x90, 0xa8, 0x31, 0x2f, 0x1d, 0x4e, 0xa3, 0xe6,
	0x8f, 0xff, 0x1f, 0x00, 0x00, 0xff, 0xff, 0xd5, 0xa8, 0x2d, 0x44, 0x5c, 0x19, 0x00, 0x00,
}
