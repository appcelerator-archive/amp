syntax = "proto3";

package account;

import "google/api/annotations.proto";
import "google/protobuf/empty.proto";

service Account {
  rpc SignUp (SignUpRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      post: "/v1/users/signup",
      body: "*"
    };
  };
  rpc Verify (VerificationRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      post: "/v1/users/verify",
      body: "*"
    };
  };
  rpc Login (LogInRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      post: "/v1/users/login",
      body: "*"
    };
  };
  rpc PasswordReset (PasswordResetRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      post: "/v1/users/{name}/passwordReset",
      body: "*"
    };
  };
  rpc PasswordSet (PasswordSetRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      post: "/v1/users/passwordSet",
      body: "*"
    };
  };
  rpc PasswordChange (PasswordChangeRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      post: "/v1/users/passwordChange",
      body: "*"
    };
  };
  rpc ForgotLogin (ForgotLoginRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      post: "/v1/users/{email}/forgotLogin",
      body: "*"
    };
  };
  rpc GetUser (GetUserRequest) returns (GetUserReply) {
    option (google.api.http) = {
      get: "/v1/users/{name}"
    };
  };
  rpc ListUsers (ListUsersRequest) returns (ListUsersReply) {
    option (google.api.http) = {
      get: "/v1/users"
    };
  };
}

message User {
  string name = 1;
  string email = 2;
  int64 create_dt = 3;
}

message SignUpRequest {
  string name = 1;
  string password = 2;
  string email = 3;
}

message VerificationRequest {
  string token = 1;
}

message LogInRequest {
  string name = 1;
  string password = 2;
}

message PasswordResetRequest {
  string name = 1;
}

message PasswordSetRequest {
  string token = 1;
  string password = 2;
}

message PasswordChangeRequest {
  string existingPassword = 1;
  string newPassword = 2;
}

message ForgotLoginRequest {
  string email = 1;
}

message GetUserRequest {
  string name = 1;
}

message GetUserReply {
  User user = 1;
}

message ListUsersRequest {
}

message ListUsersReply {
  repeated User users = 1;
}
