// Code generated by protoc-gen-go.
// source: github.com/appcelerator/amp/api/rpc/types/types.proto
// DO NOT EDIT!

/*
Package types is a generated protocol buffer package.

It is generated from these files:
	github.com/appcelerator/amp/api/rpc/types/types.proto

It has these top-level messages:
	Version
	IndexEntry
	Annotations
	Driver
	ConfigSpec
	Meta
*/
package types

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/ptypes/timestamp"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Version tracks the last time an object in the store was updated.
type Version struct {
	Index uint64 `protobuf:"varint,1,opt,name=index" json:"index,omitempty"`
}

func (m *Version) Reset()                    { *m = Version{} }
func (m *Version) String() string            { return proto.CompactTextString(m) }
func (*Version) ProtoMessage()               {}
func (*Version) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Version) GetIndex() uint64 {
	if m != nil {
		return m.Index
	}
	return 0
}

type IndexEntry struct {
	Key string `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	Val string `protobuf:"bytes,2,opt,name=val" json:"val,omitempty"`
}

func (m *IndexEntry) Reset()                    { *m = IndexEntry{} }
func (m *IndexEntry) String() string            { return proto.CompactTextString(m) }
func (*IndexEntry) ProtoMessage()               {}
func (*IndexEntry) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *IndexEntry) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *IndexEntry) GetVal() string {
	if m != nil {
		return m.Val
	}
	return ""
}

// Annotations provide useful information to identify API objects. They are
// common to all API specs.
type Annotations struct {
	Name   string            `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Labels map[string]string `protobuf:"bytes,2,rep,name=labels" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Indices provides keys and values for indexing this object.
	// A single key may have multiple values.
	Indices []*IndexEntry `protobuf:"bytes,4,rep,name=indices" json:"indices,omitempty"`
}

func (m *Annotations) Reset()                    { *m = Annotations{} }
func (m *Annotations) String() string            { return proto.CompactTextString(m) }
func (*Annotations) ProtoMessage()               {}
func (*Annotations) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *Annotations) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Annotations) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *Annotations) GetIndices() []*IndexEntry {
	if m != nil {
		return m.Indices
	}
	return nil
}

// Driver is a generic driver type to be used throughout the API. For now, a
// driver is simply a name and set of options. The field contents depend on the
// target use case and driver application. For example, a network driver may
// have different rules than a volume driver.
type Driver struct {
	Name    string            `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Options map[string]string `protobuf:"bytes,2,rep,name=options" json:"options,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *Driver) Reset()                    { *m = Driver{} }
func (m *Driver) String() string            { return proto.CompactTextString(m) }
func (*Driver) ProtoMessage()               {}
func (*Driver) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *Driver) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Driver) GetOptions() map[string]string {
	if m != nil {
		return m.Options
	}
	return nil
}

// ConfigSpec specifies user-provided configuration files.
type ConfigSpec struct {
	Annotations *Annotations `protobuf:"bytes,1,opt,name=annotations" json:"annotations,omitempty"`
	// Data is the config payload - the maximum size is 500KB (that is, 500*1024 bytes)
	Data []byte `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	// Templating controls whether and how to evaluate the secret payload as
	// a template. If it is not set, no templating is used.
	//
	// The currently recognized values are:
	// - golang: Go templating
	Templating *Driver `protobuf:"bytes,3,opt,name=templating" json:"templating,omitempty"`
}

func (m *ConfigSpec) Reset()                    { *m = ConfigSpec{} }
func (m *ConfigSpec) String() string            { return proto.CompactTextString(m) }
func (*ConfigSpec) ProtoMessage()               {}
func (*ConfigSpec) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *ConfigSpec) GetAnnotations() *Annotations {
	if m != nil {
		return m.Annotations
	}
	return nil
}

func (m *ConfigSpec) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *ConfigSpec) GetTemplating() *Driver {
	if m != nil {
		return m.Templating
	}
	return nil
}

// Meta contains metadata about objects. Every object contains a meta field.
// from: api/objects.proto
type Meta struct {
	// Version tracks the current version of the object.
	Version *Version `protobuf:"bytes,1,opt,name=version" json:"version,omitempty"`
	// Object timestamps.
	// Note: can't use stdtime because these fields are nullable.
	CreatedAt *google_protobuf.Timestamp `protobuf:"bytes,2,opt,name=created_at,json=createdAt" json:"created_at,omitempty"`
	UpdatedAt *google_protobuf.Timestamp `protobuf:"bytes,3,opt,name=updated_at,json=updatedAt" json:"updated_at,omitempty"`
}

func (m *Meta) Reset()                    { *m = Meta{} }
func (m *Meta) String() string            { return proto.CompactTextString(m) }
func (*Meta) ProtoMessage()               {}
func (*Meta) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *Meta) GetVersion() *Version {
	if m != nil {
		return m.Version
	}
	return nil
}

func (m *Meta) GetCreatedAt() *google_protobuf.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *Meta) GetUpdatedAt() *google_protobuf.Timestamp {
	if m != nil {
		return m.UpdatedAt
	}
	return nil
}

func init() {
	proto.RegisterType((*Version)(nil), "types.Version")
	proto.RegisterType((*IndexEntry)(nil), "types.IndexEntry")
	proto.RegisterType((*Annotations)(nil), "types.Annotations")
	proto.RegisterType((*Driver)(nil), "types.Driver")
	proto.RegisterType((*ConfigSpec)(nil), "types.ConfigSpec")
	proto.RegisterType((*Meta)(nil), "types.Meta")
}

func init() {
	proto.RegisterFile("github.com/appcelerator/amp/api/rpc/types/types.proto", fileDescriptor0)
}

var fileDescriptor0 = []byte{
	// 433 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x52, 0xcd, 0x6a, 0xd5, 0x40,
	0x14, 0x26, 0xf7, 0x97, 0x9e, 0x54, 0xd1, 0xa1, 0x8b, 0x70, 0x17, 0xb6, 0x64, 0x75, 0x41, 0x4c,
	0xa4, 0x56, 0xb1, 0xdd, 0x5d, 0xd4, 0x85, 0xa0, 0x08, 0xa3, 0xb8, 0x95, 0x73, 0x93, 0xd3, 0x38,
	0x98, 0xcc, 0x0c, 0x93, 0x49, 0xf0, 0x3e, 0x80, 0x5b, 0x1f, 0xc3, 0xf7, 0xf0, 0xcd, 0x24, 0x33,
	0x13, 0x1a, 0xb1, 0x20, 0xdd, 0x0c, 0xe7, 0xe7, 0xfb, 0xce, 0xf9, 0xe6, 0xf0, 0xc1, 0xf3, 0x4a,
	0xd8, 0xaf, 0xdd, 0x3e, 0x2b, 0x54, 0x93, 0xa3, 0xd6, 0x05, 0xd5, 0x64, 0xd0, 0x2a, 0x93, 0x63,
	0xa3, 0x73, 0xd4, 0x22, 0x37, 0xba, 0xc8, 0xed, 0x41, 0x53, 0xeb, 0xdf, 0x4c, 0x1b, 0x65, 0x15,
	0x5b, 0xba, 0x64, 0x73, 0x5a, 0x29, 0x55, 0xd5, 0x94, 0xbb, 0xe2, 0xbe, 0xbb, 0xce, 0xad, 0x68,
	0xa8, 0xb5, 0xd8, 0x68, 0x8f, 0x4b, 0x4f, 0x61, 0xfd, 0x99, 0x4c, 0x2b, 0x94, 0x64, 0x27, 0xb0,
	0x14, 0xb2, 0xa4, 0xef, 0x49, 0x74, 0x16, 0x6d, 0x17, 0xdc, 0x27, 0xe9, 0x53, 0x80, 0xb7, 0x43,
	0xf0, 0x46, 0x5a, 0x73, 0x60, 0x0f, 0x60, 0xfe, 0x8d, 0x0e, 0x0e, 0x71, 0xc4, 0x87, 0x70, 0xa8,
	0xf4, 0x58, 0x27, 0x33, 0x5f, 0xe9, 0xb1, 0x4e, 0x7f, 0x47, 0x10, 0xef, 0xa4, 0x54, 0x16, 0xad,
	0x50, 0xb2, 0x65, 0x0c, 0x16, 0x12, 0x1b, 0x0a, 0x24, 0x17, 0xb3, 0x17, 0xb0, 0xaa, 0x71, 0x4f,
	0x75, 0x9b, 0xcc, 0xce, 0xe6, 0xdb, 0xf8, 0xfc, 0x51, 0xe6, 0xc5, 0x4f, 0x78, 0xd9, 0x3b, 0x07,
	0x70, 0x7b, 0x79, 0x40, 0xb3, 0xc7, 0xb0, 0x16, 0xb2, 0x14, 0x05, 0xb5, 0xc9, 0xc2, 0x11, 0x1f,
	0x06, 0xe2, 0x8d, 0x46, 0x3e, 0x22, 0x36, 0x97, 0x10, 0x4f, 0x66, 0xdc, 0xa2, 0xfd, 0x04, 0x96,
	0x3d, 0xd6, 0x1d, 0x05, 0xf5, 0x3e, 0xb9, 0x9a, 0xbd, 0x8c, 0xd2, 0x9f, 0x11, 0xac, 0x5e, 0x1b,
	0xd1, 0x93, 0xb9, 0x55, 0xfe, 0x05, 0xac, 0x95, 0x76, 0x2a, 0x83, 0xfe, 0x4d, 0x90, 0xe1, 0x39,
	0xd9, 0x07, 0xdf, 0x0c, 0x7a, 0x02, 0x74, 0x73, 0x05, 0xc7, 0xd3, 0xc6, 0x9d, 0x04, 0xfd, 0x88,
	0x00, 0x5e, 0x29, 0x79, 0x2d, 0xaa, 0x8f, 0x9a, 0x0a, 0x76, 0x01, 0x31, 0xde, 0x9c, 0xca, 0x8d,
	0x88, 0xcf, 0xd9, 0xbf, 0x47, 0xe4, 0x53, 0xd8, 0xf0, 0x95, 0x12, 0x2d, 0xba, 0xe9, 0xc7, 0xdc,
	0xc5, 0xec, 0x09, 0x80, 0xa5, 0x46, 0xd7, 0x68, 0x85, 0xac, 0x92, 0xb9, 0x1b, 0x74, 0xef, 0xaf,
	0xdf, 0xf0, 0x09, 0x20, 0xfd, 0x15, 0xc1, 0xe2, 0x3d, 0x59, 0x64, 0x5b, 0x58, 0xf7, 0xde, 0x38,
	0x61, 0xfb, 0xfd, 0x40, 0x0a, 0x76, 0xe2, 0x63, 0x9b, 0x5d, 0x02, 0x14, 0x86, 0xd0, 0x52, 0xf9,
	0x05, 0xad, 0xdb, 0x3d, 0xdc, 0xcb, 0x1b, 0x33, 0x1b, 0x8d, 0x99, 0x7d, 0x1a, 0x8d, 0xc9, 0x8f,
	0x02, 0x7a, 0x67, 0x07, 0x6a, 0xa7, 0xcb, 0x91, 0x3a, 0xff, 0x3f, 0x35, 0xa0, 0x77, 0x76, 0xbf,
	0x72, 0xed, 0x67, 0x7f, 0x02, 0x00, 0x00, 0xff, 0xff, 0xbc, 0x02, 0xbf, 0x64, 0x40, 0x03, 0x00,
	0x00,
}
