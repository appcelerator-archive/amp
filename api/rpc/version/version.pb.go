// Code generated by protoc-gen-go.
// source: github.com/appcelerator/amp/api/rpc/version/version.proto
// DO NOT EDIT!

/*
Package version is a generated protocol buffer package.

It is generated from these files:
	github.com/appcelerator/amp/api/rpc/version/version.proto

It has these top-level messages:
	Info
	GetRequest
	GetReply
	ValidateGtwURLRequest
	ValidateGtwURLReply
*/
package version

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "google.golang.org/genproto/googleapis/api/annotations"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Info struct {
	Version   string `protobuf:"bytes,1,opt,name=version" json:"version,omitempty"`
	Build     string `protobuf:"bytes,2,opt,name=build" json:"build,omitempty"`
	GoVersion string `protobuf:"bytes,3,opt,name=go_version,json=goVersion" json:"go_version,omitempty"`
	Os        string `protobuf:"bytes,4,opt,name=os" json:"os,omitempty"`
	Arch      string `protobuf:"bytes,5,opt,name=arch" json:"arch,omitempty"`
}

func (m *Info) Reset()                    { *m = Info{} }
func (m *Info) String() string            { return proto.CompactTextString(m) }
func (*Info) ProtoMessage()               {}
func (*Info) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Info) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *Info) GetBuild() string {
	if m != nil {
		return m.Build
	}
	return ""
}

func (m *Info) GetGoVersion() string {
	if m != nil {
		return m.GoVersion
	}
	return ""
}

func (m *Info) GetOs() string {
	if m != nil {
		return m.Os
	}
	return ""
}

func (m *Info) GetArch() string {
	if m != nil {
		return m.Arch
	}
	return ""
}

type GetRequest struct {
}

func (m *GetRequest) Reset()                    { *m = GetRequest{} }
func (m *GetRequest) String() string            { return proto.CompactTextString(m) }
func (*GetRequest) ProtoMessage()               {}
func (*GetRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type GetReply struct {
	Info *Info `protobuf:"bytes,1,opt,name=info" json:"info,omitempty"`
}

func (m *GetReply) Reset()                    { *m = GetReply{} }
func (m *GetReply) String() string            { return proto.CompactTextString(m) }
func (*GetReply) ProtoMessage()               {}
func (*GetReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *GetReply) GetInfo() *Info {
	if m != nil {
		return m.Info
	}
	return nil
}

type ValidateGtwURLRequest struct {
}

func (m *ValidateGtwURLRequest) Reset()                    { *m = ValidateGtwURLRequest{} }
func (m *ValidateGtwURLRequest) String() string            { return proto.CompactTextString(m) }
func (*ValidateGtwURLRequest) ProtoMessage()               {}
func (*ValidateGtwURLRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

type ValidateGtwURLReply struct {
	Reply string `protobuf:"bytes,1,opt,name=reply" json:"reply,omitempty"`
}

func (m *ValidateGtwURLReply) Reset()                    { *m = ValidateGtwURLReply{} }
func (m *ValidateGtwURLReply) String() string            { return proto.CompactTextString(m) }
func (*ValidateGtwURLReply) ProtoMessage()               {}
func (*ValidateGtwURLReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *ValidateGtwURLReply) GetReply() string {
	if m != nil {
		return m.Reply
	}
	return ""
}

func init() {
	proto.RegisterType((*Info)(nil), "version.Info")
	proto.RegisterType((*GetRequest)(nil), "version.GetRequest")
	proto.RegisterType((*GetReply)(nil), "version.GetReply")
	proto.RegisterType((*ValidateGtwURLRequest)(nil), "version.ValidateGtwURLRequest")
	proto.RegisterType((*ValidateGtwURLReply)(nil), "version.ValidateGtwURLReply")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Version service

type VersionClient interface {
	Get(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*GetReply, error)
	ValidateGtwURL(ctx context.Context, in *ValidateGtwURLRequest, opts ...grpc.CallOption) (*ValidateGtwURLReply, error)
}

type versionClient struct {
	cc *grpc.ClientConn
}

func NewVersionClient(cc *grpc.ClientConn) VersionClient {
	return &versionClient{cc}
}

func (c *versionClient) Get(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*GetReply, error) {
	out := new(GetReply)
	err := grpc.Invoke(ctx, "/version.Version/Get", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *versionClient) ValidateGtwURL(ctx context.Context, in *ValidateGtwURLRequest, opts ...grpc.CallOption) (*ValidateGtwURLReply, error) {
	out := new(ValidateGtwURLReply)
	err := grpc.Invoke(ctx, "/version.Version/ValidateGtwURL", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Version service

type VersionServer interface {
	Get(context.Context, *GetRequest) (*GetReply, error)
	ValidateGtwURL(context.Context, *ValidateGtwURLRequest) (*ValidateGtwURLReply, error)
}

func RegisterVersionServer(s *grpc.Server, srv VersionServer) {
	s.RegisterService(&_Version_serviceDesc, srv)
}

func _Version_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VersionServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/version.Version/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VersionServer).Get(ctx, req.(*GetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Version_ValidateGtwURL_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ValidateGtwURLRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VersionServer).ValidateGtwURL(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/version.Version/ValidateGtwURL",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VersionServer).ValidateGtwURL(ctx, req.(*ValidateGtwURLRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Version_serviceDesc = grpc.ServiceDesc{
	ServiceName: "version.Version",
	HandlerType: (*VersionServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Get",
			Handler:    _Version_Get_Handler,
		},
		{
			MethodName: "ValidateGtwURL",
			Handler:    _Version_ValidateGtwURL_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "github.com/appcelerator/amp/api/rpc/version/version.proto",
}

func init() {
	proto.RegisterFile("github.com/appcelerator/amp/api/rpc/version/version.proto", fileDescriptor0)
}

var fileDescriptor0 = []byte{
	// 333 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x51, 0xd1, 0x4e, 0xf2, 0x30,
	0x18, 0x0d, 0x63, 0xfc, 0xfc, 0x7c, 0x08, 0x86, 0x82, 0x61, 0x21, 0x68, 0x74, 0x57, 0x26, 0x46,
	0x1a, 0xf1, 0xca, 0x5b, 0x6f, 0x88, 0x89, 0x57, 0x4b, 0xe4, 0xd6, 0x94, 0x51, 0x4a, 0x93, 0xb1,
	0xaf, 0x76, 0x05, 0xc2, 0xad, 0xaf, 0xe0, 0xbb, 0xf8, 0x22, 0xbe, 0x82, 0x0f, 0x62, 0xd6, 0xad,
	0x18, 0x8c, 0x5e, 0xad, 0xe7, 0x9c, 0xef, 0xf4, 0x9c, 0x6f, 0x85, 0x3b, 0x21, 0xcd, 0x72, 0x3d,
	0x1b, 0xc5, 0xb8, 0xa2, 0x4c, 0xa9, 0x98, 0x27, 0x5c, 0x33, 0x83, 0x9a, 0xb2, 0x95, 0xa2, 0x4c,
	0x49, 0xaa, 0x55, 0x4c, 0x37, 0x5c, 0x67, 0x12, 0x53, 0xf7, 0x1d, 0x29, 0x8d, 0x06, 0x49, 0xbd,
	0x84, 0x83, 0xa1, 0x40, 0x14, 0x09, 0xb7, 0xe3, 0x2c, 0x4d, 0xd1, 0x30, 0x23, 0x31, 0xcd, 0x8a,
	0xb1, 0x70, 0x07, 0xfe, 0x43, 0xba, 0x40, 0x12, 0x80, 0x33, 0x04, 0x95, 0xf3, 0xca, 0x65, 0x23,
	0x72, 0x90, 0xf4, 0xa0, 0x36, 0x5b, 0xcb, 0x64, 0x1e, 0x78, 0x96, 0x2f, 0x00, 0x39, 0x05, 0x10,
	0xf8, 0xec, 0x2c, 0x55, 0x2b, 0x35, 0x04, 0x4e, 0x4b, 0x53, 0x1b, 0x3c, 0xcc, 0x02, 0xdf, 0xd2,
	0x1e, 0x66, 0x84, 0x80, 0xcf, 0x74, 0xbc, 0x0c, 0x6a, 0x96, 0xb1, 0xe7, 0xf0, 0x08, 0x60, 0xc2,
	0x4d, 0xc4, 0x5f, 0xd6, 0x3c, 0x33, 0xe1, 0x35, 0xfc, 0xb7, 0x48, 0x25, 0x3b, 0x72, 0x01, 0xbe,
	0x4c, 0x17, 0x68, 0x9b, 0x34, 0xc7, 0xad, 0x91, 0xdb, 0x2c, 0x6f, 0x1a, 0x59, 0x29, 0xec, 0xc3,
	0xc9, 0x94, 0x25, 0x72, 0xce, 0x0c, 0x9f, 0x98, 0xed, 0x53, 0xf4, 0xe8, 0xee, 0xb9, 0x82, 0xee,
	0x4f, 0x21, 0xbf, 0xb2, 0x07, 0x35, 0x9d, 0x1f, 0xca, 0xed, 0x0a, 0x30, 0x7e, 0xaf, 0x40, 0xdd,
	0x55, 0xbe, 0x87, 0xea, 0x84, 0x1b, 0xd2, 0xdd, 0xa7, 0x7d, 0x97, 0x1b, 0x74, 0x0e, 0x49, 0x95,
	0xec, 0xc2, 0xee, 0xeb, 0xc7, 0xe7, 0x9b, 0xd7, 0x22, 0x4d, 0xba, 0xb9, 0x71, 0xbf, 0x9e, 0x08,
	0x68, 0x1f, 0x86, 0x93, 0xb3, 0xbd, 0xf3, 0xd7, 0xba, 0x83, 0xe1, 0x9f, 0x7a, 0x1e, 0xd2, 0xb7,
	0x21, 0x1d, 0x72, 0x9c, 0x87, 0x88, 0x2d, 0xdd, 0x94, 0x33, 0xb3, 0x7f, 0xf6, 0xf5, 0x6e, 0xbf,
	0x02, 0x00, 0x00, 0xff, 0xff, 0x7a, 0x6d, 0x8e, 0xc4, 0x21, 0x02, 0x00, 0x00,
}
