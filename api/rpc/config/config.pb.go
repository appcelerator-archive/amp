// Code generated by protoc-gen-go. DO NOT EDIT.
// source: github.com/appcelerator/amp/api/rpc/config/config.proto

/*
Package config is a generated protocol buffer package.

It is generated from these files:
	github.com/appcelerator/amp/api/rpc/config/config.proto

It has these top-level messages:
	CreateRequest
	CreateReply
	ListRequest
	ConfigEntry
	ListReply
	RemoveRequest
	RemoveReply
*/
package config

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type CreateRequest struct {
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Data []byte `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (m *CreateRequest) Reset()                    { *m = CreateRequest{} }
func (m *CreateRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateRequest) ProtoMessage()               {}
func (*CreateRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *CreateRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CreateRequest) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type CreateReply struct {
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
}

func (m *CreateReply) Reset()                    { *m = CreateReply{} }
func (m *CreateReply) String() string            { return proto.CompactTextString(m) }
func (*CreateReply) ProtoMessage()               {}
func (*CreateReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *CreateReply) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type ListRequest struct {
}

func (m *ListRequest) Reset()                    { *m = ListRequest{} }
func (m *ListRequest) String() string            { return proto.CompactTextString(m) }
func (*ListRequest) ProtoMessage()               {}
func (*ListRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

type ConfigEntry struct {
	Id   string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
}

func (m *ConfigEntry) Reset()                    { *m = ConfigEntry{} }
func (m *ConfigEntry) String() string            { return proto.CompactTextString(m) }
func (*ConfigEntry) ProtoMessage()               {}
func (*ConfigEntry) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *ConfigEntry) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ConfigEntry) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type ListReply struct {
	Entries []*ConfigEntry `protobuf:"bytes,1,rep,name=entries" json:"entries,omitempty"`
}

func (m *ListReply) Reset()                    { *m = ListReply{} }
func (m *ListReply) String() string            { return proto.CompactTextString(m) }
func (*ListReply) ProtoMessage()               {}
func (*ListReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *ListReply) GetEntries() []*ConfigEntry {
	if m != nil {
		return m.Entries
	}
	return nil
}

type RemoveRequest struct {
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
}

func (m *RemoveRequest) Reset()                    { *m = RemoveRequest{} }
func (m *RemoveRequest) String() string            { return proto.CompactTextString(m) }
func (*RemoveRequest) ProtoMessage()               {}
func (*RemoveRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *RemoveRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type RemoveReply struct {
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
}

func (m *RemoveReply) Reset()                    { *m = RemoveReply{} }
func (m *RemoveReply) String() string            { return proto.CompactTextString(m) }
func (*RemoveReply) ProtoMessage()               {}
func (*RemoveReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *RemoveReply) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func init() {
	proto.RegisterType((*CreateRequest)(nil), "config.CreateRequest")
	proto.RegisterType((*CreateReply)(nil), "config.CreateReply")
	proto.RegisterType((*ListRequest)(nil), "config.ListRequest")
	proto.RegisterType((*ConfigEntry)(nil), "config.ConfigEntry")
	proto.RegisterType((*ListReply)(nil), "config.ListReply")
	proto.RegisterType((*RemoveRequest)(nil), "config.RemoveRequest")
	proto.RegisterType((*RemoveReply)(nil), "config.RemoveReply")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Config service

type ConfigClient interface {
	Create(ctx context.Context, in *CreateRequest, opts ...grpc.CallOption) (*CreateReply, error)
	List(ctx context.Context, in *ListRequest, opts ...grpc.CallOption) (*ListReply, error)
	Remove(ctx context.Context, in *RemoveRequest, opts ...grpc.CallOption) (*RemoveReply, error)
}

type configClient struct {
	cc *grpc.ClientConn
}

func NewConfigClient(cc *grpc.ClientConn) ConfigClient {
	return &configClient{cc}
}

func (c *configClient) Create(ctx context.Context, in *CreateRequest, opts ...grpc.CallOption) (*CreateReply, error) {
	out := new(CreateReply)
	err := grpc.Invoke(ctx, "/config.Config/Create", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *configClient) List(ctx context.Context, in *ListRequest, opts ...grpc.CallOption) (*ListReply, error) {
	out := new(ListReply)
	err := grpc.Invoke(ctx, "/config.Config/List", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *configClient) Remove(ctx context.Context, in *RemoveRequest, opts ...grpc.CallOption) (*RemoveReply, error) {
	out := new(RemoveReply)
	err := grpc.Invoke(ctx, "/config.Config/Remove", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Config service

type ConfigServer interface {
	Create(context.Context, *CreateRequest) (*CreateReply, error)
	List(context.Context, *ListRequest) (*ListReply, error)
	Remove(context.Context, *RemoveRequest) (*RemoveReply, error)
}

func RegisterConfigServer(s *grpc.Server, srv ConfigServer) {
	s.RegisterService(&_Config_serviceDesc, srv)
}

func _Config_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConfigServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/config.Config/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConfigServer).Create(ctx, req.(*CreateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Config_List_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConfigServer).List(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/config.Config/List",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConfigServer).List(ctx, req.(*ListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Config_Remove_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemoveRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConfigServer).Remove(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/config.Config/Remove",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConfigServer).Remove(ctx, req.(*RemoveRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Config_serviceDesc = grpc.ServiceDesc{
	ServiceName: "config.Config",
	HandlerType: (*ConfigServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _Config_Create_Handler,
		},
		{
			MethodName: "List",
			Handler:    _Config_List_Handler,
		},
		{
			MethodName: "Remove",
			Handler:    _Config_Remove_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "github.com/appcelerator/amp/api/rpc/config/config.proto",
}

func init() {
	proto.RegisterFile("github.com/appcelerator/amp/api/rpc/config/config.proto", fileDescriptor0)
}

var fileDescriptor0 = []byte{
	// 283 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x51, 0xdd, 0x4a, 0xc3, 0x30,
	0x14, 0xa6, 0x75, 0x54, 0x76, 0x6a, 0x05, 0x33, 0x84, 0x32, 0x18, 0x96, 0x5c, 0xf5, 0xc6, 0x16,
	0xe7, 0x60, 0xe0, 0xed, 0xf0, 0xce, 0xab, 0xbc, 0x41, 0xd6, 0x1e, 0x67, 0x60, 0x6d, 0x62, 0x9a,
	0x09, 0xbe, 0x8f, 0x0f, 0x2a, 0x69, 0xfa, 0xb7, 0xe9, 0x55, 0x4e, 0x4e, 0xbe, 0xf3, 0xfd, 0x9c,
	0xc0, 0xf6, 0x20, 0xcc, 0xc7, 0x69, 0x9f, 0x15, 0xb2, 0xca, 0xb9, 0x52, 0x05, 0x1e, 0x51, 0x73,
	0x23, 0x75, 0xce, 0x2b, 0x95, 0x73, 0x25, 0x72, 0xad, 0x8a, 0xbc, 0x90, 0xf5, 0xbb, 0x38, 0x74,
	0x47, 0xa6, 0xb4, 0x34, 0x92, 0x04, 0xee, 0x46, 0xb7, 0x10, 0xed, 0x34, 0x72, 0x83, 0x0c, 0x3f,
	0x4f, 0xd8, 0x18, 0x42, 0x60, 0x56, 0xf3, 0x0a, 0x63, 0x2f, 0xf1, 0xd2, 0x39, 0x6b, 0x6b, 0xdb,
	0x2b, 0xb9, 0xe1, 0xb1, 0x9f, 0x78, 0xe9, 0x0d, 0x6b, 0x6b, 0xba, 0x82, 0xb0, 0x1f, 0x54, 0xc7,
	0x6f, 0x72, 0x0b, 0xbe, 0x28, 0xbb, 0x21, 0x5f, 0x94, 0x34, 0x82, 0xf0, 0x4d, 0x34, 0xa6, 0x63,
	0xa5, 0x4f, 0x10, 0xee, 0x5a, 0xc1, 0xd7, 0xda, 0xe8, 0x3f, 0xe8, 0x41, 0xd4, 0x1f, 0x45, 0xe9,
	0x0b, 0xcc, 0x1d, 0x83, 0xa5, 0x7f, 0x84, 0x6b, 0xac, 0x8d, 0x16, 0xd8, 0xc4, 0x5e, 0x72, 0x95,
	0x86, 0xeb, 0x45, 0xd6, 0xc5, 0x99, 0xd0, 0xb2, 0x1e, 0x43, 0x1f, 0x20, 0x62, 0x58, 0xc9, 0xaf,
	0x21, 0xd5, 0xa5, 0xbd, 0x15, 0x84, 0x3d, 0xe0, 0x1f, 0xf7, 0xeb, 0x1f, 0x0f, 0x02, 0x47, 0x4c,
	0x36, 0x10, 0xb8, 0x9c, 0xe4, 0x7e, 0x90, 0x9c, 0x2e, 0x6c, 0xb9, 0xb8, 0x6c, 0x5b, 0xc2, 0x0c,
	0x66, 0xd6, 0x3c, 0x19, 0x1e, 0x27, 0xcb, 0x58, 0xde, 0x9d, 0x37, 0x2d, 0x7e, 0x03, 0x81, 0xf3,
	0x33, 0xaa, 0x9c, 0x05, 0x18, 0x55, 0x26, 0xb6, 0xf7, 0x41, 0xfb, 0x97, 0xcf, 0xbf, 0x01, 0x00,
	0x00, 0xff, 0xff, 0x25, 0x5c, 0x35, 0x8c, 0x06, 0x02, 0x00, 0x00,
}
