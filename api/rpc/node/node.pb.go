// Code generated by protoc-gen-go. DO NOT EDIT.
// source: github.com/appcelerator/amp/api/rpc/node/node.proto

/*
Package node is a generated protocol buffer package.

It is generated from these files:
	github.com/appcelerator/amp/api/rpc/node/node.proto

It has these top-level messages:
	NodeEntry
	GetRequest
	GetReply
*/
package node

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "google.golang.org/genproto/googleapis/api/annotations"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type NodeEntry struct {
	Id           string            `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Name         string            `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Hostname     string            `protobuf:"bytes,3,opt,name=hostname" json:"hostname,omitempty"`
	Role         string            `protobuf:"bytes,4,opt,name=role" json:"role,omitempty"`
	Architecture string            `protobuf:"bytes,5,opt,name=architecture" json:"architecture,omitempty"`
	Os           string            `protobuf:"bytes,6,opt,name=os" json:"os,omitempty"`
	Engine       string            `protobuf:"bytes,7,opt,name=engine" json:"engine,omitempty"`
	Status       string            `protobuf:"bytes,8,opt,name=status" json:"status,omitempty"`
	Availability string            `protobuf:"bytes,9,opt,name=availability" json:"availability,omitempty"`
	Labels       map[string]string `protobuf:"bytes,10,rep,name=labels" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Leader       bool              `protobuf:"varint,11,opt,name=leader" json:"leader,omitempty"`
	Addr         string            `protobuf:"bytes,12,opt,name=addr" json:"addr,omitempty"`
	Reachability string            `protobuf:"bytes,13,opt,name=reachability" json:"reachability,omitempty"`
}

func (m *NodeEntry) Reset()                    { *m = NodeEntry{} }
func (m *NodeEntry) String() string            { return proto.CompactTextString(m) }
func (*NodeEntry) ProtoMessage()               {}
func (*NodeEntry) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *NodeEntry) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *NodeEntry) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *NodeEntry) GetHostname() string {
	if m != nil {
		return m.Hostname
	}
	return ""
}

func (m *NodeEntry) GetRole() string {
	if m != nil {
		return m.Role
	}
	return ""
}

func (m *NodeEntry) GetArchitecture() string {
	if m != nil {
		return m.Architecture
	}
	return ""
}

func (m *NodeEntry) GetOs() string {
	if m != nil {
		return m.Os
	}
	return ""
}

func (m *NodeEntry) GetEngine() string {
	if m != nil {
		return m.Engine
	}
	return ""
}

func (m *NodeEntry) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *NodeEntry) GetAvailability() string {
	if m != nil {
		return m.Availability
	}
	return ""
}

func (m *NodeEntry) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *NodeEntry) GetLeader() bool {
	if m != nil {
		return m.Leader
	}
	return false
}

func (m *NodeEntry) GetAddr() string {
	if m != nil {
		return m.Addr
	}
	return ""
}

func (m *NodeEntry) GetReachability() string {
	if m != nil {
		return m.Reachability
	}
	return ""
}

type GetRequest struct {
}

func (m *GetRequest) Reset()                    { *m = GetRequest{} }
func (m *GetRequest) String() string            { return proto.CompactTextString(m) }
func (*GetRequest) ProtoMessage()               {}
func (*GetRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type GetReply struct {
	Entries []*NodeEntry `protobuf:"bytes,1,rep,name=entries" json:"entries,omitempty"`
}

func (m *GetReply) Reset()                    { *m = GetReply{} }
func (m *GetReply) String() string            { return proto.CompactTextString(m) }
func (*GetReply) ProtoMessage()               {}
func (*GetReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *GetReply) GetEntries() []*NodeEntry {
	if m != nil {
		return m.Entries
	}
	return nil
}

func init() {
	proto.RegisterType((*NodeEntry)(nil), "node.NodeEntry")
	proto.RegisterType((*GetRequest)(nil), "node.GetRequest")
	proto.RegisterType((*GetReply)(nil), "node.GetReply")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Node service

type NodeClient interface {
	NodeGet(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*GetReply, error)
}

type nodeClient struct {
	cc *grpc.ClientConn
}

func NewNodeClient(cc *grpc.ClientConn) NodeClient {
	return &nodeClient{cc}
}

func (c *nodeClient) NodeGet(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*GetReply, error) {
	out := new(GetReply)
	err := grpc.Invoke(ctx, "/node.Node/NodeGet", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Node service

type NodeServer interface {
	NodeGet(context.Context, *GetRequest) (*GetReply, error)
}

func RegisterNodeServer(s *grpc.Server, srv NodeServer) {
	s.RegisterService(&_Node_serviceDesc, srv)
}

func _Node_NodeGet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeServer).NodeGet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/node.Node/NodeGet",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeServer).NodeGet(ctx, req.(*GetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Node_serviceDesc = grpc.ServiceDesc{
	ServiceName: "node.Node",
	HandlerType: (*NodeServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "NodeGet",
			Handler:    _Node_NodeGet_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "github.com/appcelerator/amp/api/rpc/node/node.proto",
}

func init() {
	proto.RegisterFile("github.com/appcelerator/amp/api/rpc/node/node.proto", fileDescriptor0)
}

var fileDescriptor0 = []byte{
	// 412 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x5c, 0x92, 0x4f, 0x8e, 0xd3, 0x30,
	0x14, 0xc6, 0x95, 0xb4, 0xd3, 0x3f, 0xaf, 0x65, 0x18, 0x2c, 0x84, 0xac, 0xc2, 0xa2, 0xca, 0xaa,
	0x6c, 0x1a, 0x31, 0x15, 0x12, 0xb0, 0x60, 0x07, 0xb3, 0x41, 0x2c, 0x72, 0x03, 0x37, 0x79, 0x6a,
	0x2d, 0x5c, 0xdb, 0xd8, 0x4e, 0xa5, 0x6c, 0xb9, 0x02, 0x87, 0xe0, 0x40, 0x5c, 0x81, 0x83, 0x20,
	0x3f, 0xa7, 0x25, 0xcc, 0xa6, 0xfd, 0xbe, 0x9f, 0x3f, 0xe5, 0xf3, 0x7b, 0x32, 0xec, 0x0e, 0x32,
	0x1c, 0xdb, 0xfd, 0xb6, 0x36, 0xa7, 0x52, 0x58, 0x5b, 0xa3, 0x42, 0x27, 0x82, 0x71, 0xa5, 0x38,
	0xd9, 0x52, 0x58, 0x59, 0x3a, 0x5b, 0x97, 0xda, 0x34, 0x48, 0x3f, 0x5b, 0xeb, 0x4c, 0x30, 0x6c,
	0x1c, 0xf5, 0xea, 0xd5, 0xc1, 0x98, 0x83, 0x42, 0x4a, 0x09, 0xad, 0x4d, 0x10, 0x41, 0x1a, 0xed,
	0x53, 0xa6, 0xf8, 0x35, 0x82, 0xf9, 0x57, 0xd3, 0xe0, 0x27, 0x1d, 0x5c, 0xc7, 0x6e, 0x21, 0x97,
	0x0d, 0xcf, 0xd6, 0xd9, 0x66, 0x5e, 0xe5, 0xb2, 0x61, 0x0c, 0xc6, 0x5a, 0x9c, 0x90, 0xe7, 0x44,
	0x48, 0xb3, 0x15, 0xcc, 0x8e, 0xc6, 0x07, 0xe2, 0x23, 0xe2, 0x57, 0x1f, 0xf3, 0xce, 0x28, 0xe4,
	0xe3, 0x94, 0x8f, 0x9a, 0x15, 0xb0, 0x14, 0xae, 0x3e, 0xca, 0x80, 0x75, 0x68, 0x1d, 0xf2, 0x1b,
	0x3a, 0xfb, 0x8f, 0xc5, 0x5e, 0xe3, 0xf9, 0x24, 0xf5, 0x1a, 0xcf, 0x5e, 0xc0, 0x04, 0xf5, 0x41,
	0x6a, 0xe4, 0x53, 0x62, 0xbd, 0x8b, 0xdc, 0x07, 0x11, 0x5a, 0xcf, 0x67, 0x89, 0x27, 0x47, 0x1d,
	0x67, 0x21, 0x95, 0xd8, 0x4b, 0x25, 0x43, 0xc7, 0xe7, 0x7d, 0xc7, 0x80, 0xb1, 0x1d, 0x4c, 0x94,
	0xd8, 0xa3, 0xf2, 0x1c, 0xd6, 0xa3, 0xcd, 0xe2, 0xfe, 0xe5, 0x96, 0x56, 0x75, 0x1d, 0x7e, 0xfb,
	0x85, 0x4e, 0x49, 0x57, 0x7d, 0x34, 0x16, 0x2a, 0x14, 0x0d, 0x3a, 0xbe, 0x58, 0x67, 0x9b, 0x59,
	0xd5, 0xbb, 0x38, 0xa8, 0x68, 0x1a, 0xc7, 0x97, 0x69, 0xd0, 0xa8, 0xe3, 0x25, 0x1c, 0x8a, 0xfa,
	0x78, 0xb9, 0xc4, 0x93, 0x74, 0x89, 0x21, 0x5b, 0xbd, 0x87, 0xc5, 0xa0, 0x86, 0xdd, 0xc1, 0xe8,
	0x1b, 0x76, 0xfd, 0xc2, 0xa3, 0x64, 0xcf, 0xe1, 0xe6, 0x2c, 0x54, 0x7b, 0x59, 0x79, 0x32, 0x1f,
	0xf2, 0x77, 0x59, 0xb1, 0x04, 0x78, 0xc0, 0x50, 0xe1, 0xf7, 0x16, 0x7d, 0x28, 0xde, 0xc2, 0x8c,
	0x9c, 0x55, 0x1d, 0x7b, 0x0d, 0x53, 0xd4, 0xc1, 0x49, 0xf4, 0x3c, 0xa3, 0xd1, 0x9e, 0x3e, 0x1a,
	0xad, 0xba, 0x9c, 0xdf, 0x7f, 0x86, 0x71, 0xa4, 0xec, 0x23, 0x4c, 0xe3, 0xff, 0x03, 0x06, 0x76,
	0x97, 0xc2, 0xff, 0xbe, 0xbd, 0xba, 0x1d, 0x10, 0xab, 0xba, 0xe2, 0xd9, 0x8f, 0xdf, 0x7f, 0x7e,
	0xe6, 0x0b, 0x36, 0x2f, 0xcf, 0x6f, 0xe8, 0x7d, 0xf9, 0xfd, 0x84, 0x5e, 0xcf, 0xee, 0x6f, 0x00,
	0x00, 0x00, 0xff, 0xff, 0xd7, 0x59, 0x80, 0x2f, 0x98, 0x02, 0x00, 0x00,
}
