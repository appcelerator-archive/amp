// Code generated by protoc-gen-go.
// source: github.com/appcelerator/amp/api/rpc/storage/storage.proto
// DO NOT EDIT!

/*
Package storage is a generated protocol buffer package.

It is generated from these files:
	github.com/appcelerator/amp/api/rpc/storage/storage.proto

It has these top-level messages:
	GetStorage
	DeleteStorage
	PutStorage
	ListStorage
	StorageResponse
	ListResponse
	StorageInfo
	StorageKey
*/
package storage

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/grpc-ecosystem/grpc-gateway/third_party/googleapis/google/api"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// struct for get storage request function
type GetStorage struct {
	Key string `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
}

func (m *GetStorage) Reset()                    { *m = GetStorage{} }
func (m *GetStorage) String() string            { return proto.CompactTextString(m) }
func (*GetStorage) ProtoMessage()               {}
func (*GetStorage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *GetStorage) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

// struct for delete storage request function
type DeleteStorage struct {
	Key string `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
}

func (m *DeleteStorage) Reset()                    { *m = DeleteStorage{} }
func (m *DeleteStorage) String() string            { return proto.CompactTextString(m) }
func (*DeleteStorage) ProtoMessage()               {}
func (*DeleteStorage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *DeleteStorage) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

// struct for put storage request function
type PutStorage struct {
	Key string `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	Val string `protobuf:"bytes,2,opt,name=val" json:"val,omitempty"`
}

func (m *PutStorage) Reset()                    { *m = PutStorage{} }
func (m *PutStorage) String() string            { return proto.CompactTextString(m) }
func (*PutStorage) ProtoMessage()               {}
func (*PutStorage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *PutStorage) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *PutStorage) GetVal() string {
	if m != nil {
		return m.Val
	}
	return ""
}

// struct for list storage request function
type ListStorage struct {
}

func (m *ListStorage) Reset()                    { *m = ListStorage{} }
func (m *ListStorage) String() string            { return proto.CompactTextString(m) }
func (*ListStorage) ProtoMessage()               {}
func (*ListStorage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

// struct for storage object key response
type StorageResponse struct {
	Key string `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	Val string `protobuf:"bytes,2,opt,name=val" json:"val,omitempty"`
}

func (m *StorageResponse) Reset()                    { *m = StorageResponse{} }
func (m *StorageResponse) String() string            { return proto.CompactTextString(m) }
func (*StorageResponse) ProtoMessage()               {}
func (*StorageResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *StorageResponse) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *StorageResponse) GetVal() string {
	if m != nil {
		return m.Val
	}
	return ""
}

// struct for list storage response function
type ListResponse struct {
	List []*StorageInfo `protobuf:"bytes,1,rep,name=list" json:"list,omitempty"`
}

func (m *ListResponse) Reset()                    { *m = ListResponse{} }
func (m *ListResponse) String() string            { return proto.CompactTextString(m) }
func (*ListResponse) ProtoMessage()               {}
func (*ListResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *ListResponse) GetList() []*StorageInfo {
	if m != nil {
		return m.List
	}
	return nil
}

// struct part of ListResponse Struct
type StorageInfo struct {
	Key string `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	Val string `protobuf:"bytes,2,opt,name=val" json:"val,omitempty"`
}

func (m *StorageInfo) Reset()                    { *m = StorageInfo{} }
func (m *StorageInfo) String() string            { return proto.CompactTextString(m) }
func (*StorageInfo) ProtoMessage()               {}
func (*StorageInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *StorageInfo) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *StorageInfo) GetVal() string {
	if m != nil {
		return m.Val
	}
	return ""
}

// struct to store Storage Key in ETCD
type StorageKey struct {
	Key string `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
}

func (m *StorageKey) Reset()                    { *m = StorageKey{} }
func (m *StorageKey) String() string            { return proto.CompactTextString(m) }
func (*StorageKey) ProtoMessage()               {}
func (*StorageKey) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *StorageKey) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func init() {
	proto.RegisterType((*GetStorage)(nil), "storage.GetStorage")
	proto.RegisterType((*DeleteStorage)(nil), "storage.DeleteStorage")
	proto.RegisterType((*PutStorage)(nil), "storage.PutStorage")
	proto.RegisterType((*ListStorage)(nil), "storage.ListStorage")
	proto.RegisterType((*StorageResponse)(nil), "storage.StorageResponse")
	proto.RegisterType((*ListResponse)(nil), "storage.ListResponse")
	proto.RegisterType((*StorageInfo)(nil), "storage.StorageInfo")
	proto.RegisterType((*StorageKey)(nil), "storage.StorageKey")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Storage service

type StorageClient interface {
	Put(ctx context.Context, in *PutStorage, opts ...grpc.CallOption) (*StorageResponse, error)
	Get(ctx context.Context, in *GetStorage, opts ...grpc.CallOption) (*StorageResponse, error)
	Delete(ctx context.Context, in *DeleteStorage, opts ...grpc.CallOption) (*StorageResponse, error)
	List(ctx context.Context, in *ListStorage, opts ...grpc.CallOption) (*ListResponse, error)
}

type storageClient struct {
	cc *grpc.ClientConn
}

func NewStorageClient(cc *grpc.ClientConn) StorageClient {
	return &storageClient{cc}
}

func (c *storageClient) Put(ctx context.Context, in *PutStorage, opts ...grpc.CallOption) (*StorageResponse, error) {
	out := new(StorageResponse)
	err := grpc.Invoke(ctx, "/storage.Storage/Put", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *storageClient) Get(ctx context.Context, in *GetStorage, opts ...grpc.CallOption) (*StorageResponse, error) {
	out := new(StorageResponse)
	err := grpc.Invoke(ctx, "/storage.Storage/Get", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *storageClient) Delete(ctx context.Context, in *DeleteStorage, opts ...grpc.CallOption) (*StorageResponse, error) {
	out := new(StorageResponse)
	err := grpc.Invoke(ctx, "/storage.Storage/Delete", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *storageClient) List(ctx context.Context, in *ListStorage, opts ...grpc.CallOption) (*ListResponse, error) {
	out := new(ListResponse)
	err := grpc.Invoke(ctx, "/storage.Storage/List", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Storage service

type StorageServer interface {
	Put(context.Context, *PutStorage) (*StorageResponse, error)
	Get(context.Context, *GetStorage) (*StorageResponse, error)
	Delete(context.Context, *DeleteStorage) (*StorageResponse, error)
	List(context.Context, *ListStorage) (*ListResponse, error)
}

func RegisterStorageServer(s *grpc.Server, srv StorageServer) {
	s.RegisterService(&_Storage_serviceDesc, srv)
}

func _Storage_Put_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PutStorage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StorageServer).Put(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/storage.Storage/Put",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StorageServer).Put(ctx, req.(*PutStorage))
	}
	return interceptor(ctx, in, info, handler)
}

func _Storage_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetStorage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StorageServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/storage.Storage/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StorageServer).Get(ctx, req.(*GetStorage))
	}
	return interceptor(ctx, in, info, handler)
}

func _Storage_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteStorage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StorageServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/storage.Storage/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StorageServer).Delete(ctx, req.(*DeleteStorage))
	}
	return interceptor(ctx, in, info, handler)
}

func _Storage_List_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListStorage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StorageServer).List(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/storage.Storage/List",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StorageServer).List(ctx, req.(*ListStorage))
	}
	return interceptor(ctx, in, info, handler)
}

var _Storage_serviceDesc = grpc.ServiceDesc{
	ServiceName: "storage.Storage",
	HandlerType: (*StorageServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Put",
			Handler:    _Storage_Put_Handler,
		},
		{
			MethodName: "Get",
			Handler:    _Storage_Get_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _Storage_Delete_Handler,
		},
		{
			MethodName: "List",
			Handler:    _Storage_List_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "github.com/appcelerator/amp/api/rpc/storage/storage.proto",
}

func init() {
	proto.RegisterFile("github.com/appcelerator/amp/api/rpc/storage/storage.proto", fileDescriptor0)
}

var fileDescriptor0 = []byte{
	// 352 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x8c, 0x92, 0xcd, 0x4a, 0xc3, 0x40,
	0x14, 0x85, 0x49, 0x53, 0x5a, 0xbc, 0xb1, 0xa8, 0x53, 0x2d, 0x31, 0x94, 0x52, 0xb3, 0x2a, 0x5d,
	0x34, 0xb6, 0x22, 0xa8, 0x6b, 0xa1, 0x8a, 0x82, 0x25, 0xe2, 0x03, 0x4c, 0xcb, 0x35, 0x86, 0xa6,
	0x99, 0x21, 0x33, 0x2d, 0x14, 0x71, 0xe3, 0x2b, 0xf8, 0x60, 0x2e, 0x7c, 0x05, 0x1f, 0x44, 0xf2,
	0xdb, 0x44, 0xad, 0x76, 0x95, 0xc9, 0xcd, 0x39, 0x5f, 0x2e, 0xe7, 0x0c, 0x9c, 0x3b, 0xae, 0x7c,
	0x9a, 0x8f, 0x7b, 0x13, 0x36, 0xb3, 0x28, 0xe7, 0x13, 0xf4, 0x30, 0xa0, 0x92, 0x05, 0x16, 0x9d,
	0x71, 0x8b, 0x72, 0xd7, 0x0a, 0xf8, 0xc4, 0x12, 0x92, 0x05, 0xd4, 0xc1, 0xf4, 0xd9, 0xe3, 0x01,
	0x93, 0x8c, 0x54, 0x93, 0x57, 0xa3, 0xe9, 0x30, 0xe6, 0x78, 0x18, 0xc9, 0xa9, 0xef, 0x33, 0x49,
	0xa5, 0xcb, 0x7c, 0x11, 0xcb, 0xcc, 0x16, 0xc0, 0x10, 0xe5, 0x7d, 0xac, 0x25, 0xbb, 0xa0, 0x4e,
	0x71, 0xa9, 0x2b, 0x6d, 0xa5, 0xb3, 0x65, 0x87, 0x47, 0xf3, 0x08, 0x6a, 0x97, 0xe8, 0xa1, 0xc4,
	0xf5, 0x92, 0x63, 0x80, 0xd1, 0x7c, 0x3d, 0x22, 0x9c, 0x2c, 0xa8, 0xa7, 0x97, 0xe2, 0xc9, 0x82,
	0x7a, 0x66, 0x0d, 0xb4, 0x5b, 0x57, 0xa4, 0x16, 0xf3, 0x14, 0x76, 0x92, 0xa3, 0x8d, 0x82, 0x33,
	0x5f, 0x6c, 0x46, 0x39, 0x83, 0xed, 0x90, 0x92, 0x79, 0x3a, 0x50, 0xf6, 0x5c, 0x21, 0x75, 0xa5,
	0xad, 0x76, 0xb4, 0xc1, 0x7e, 0x2f, 0xcd, 0x23, 0x61, 0x5f, 0xfb, 0x8f, 0xcc, 0x8e, 0x14, 0x66,
	0x1f, 0xb4, 0xdc, 0x70, 0xa3, 0x9f, 0xb5, 0x00, 0x12, 0xcb, 0x4d, 0xfc, 0xbd, 0xe8, 0x18, 0xbc,
	0x97, 0xa0, 0x9a, 0x46, 0x60, 0x83, 0x3a, 0x9a, 0x4b, 0x52, 0xcf, 0x36, 0x58, 0xc5, 0x63, 0xe8,
	0xdf, 0xd7, 0x4a, 0xd7, 0x37, 0x9b, 0xaf, 0x1f, 0x9f, 0x6f, 0xa5, 0x86, 0xb1, 0x67, 0x2d, 0xfa,
	0x59, 0xa7, 0xcf, 0x53, 0x5c, 0xbe, 0x5c, 0x28, 0x5d, 0x72, 0x07, 0xea, 0x10, 0xf3, 0xcc, 0x55,
	0x6b, 0x7f, 0x30, 0x0f, 0x23, 0x66, 0x9d, 0xfc, 0x64, 0x92, 0x07, 0xa8, 0xc4, 0xc5, 0x92, 0x46,
	0x66, 0x2f, 0x34, 0xfd, 0x3f, 0xb6, 0xfb, 0x0b, 0xf6, 0x0a, 0xca, 0x61, 0x29, 0x64, 0x15, 0x7f,
	0xae, 0x69, 0xe3, 0xa0, 0x30, 0xcd, 0x78, 0xf5, 0x88, 0x57, 0x23, 0x5a, 0x8e, 0x37, 0xae, 0x44,
	0x17, 0xf4, 0xe4, 0x2b, 0x00, 0x00, 0xff, 0xff, 0xac, 0x17, 0x1f, 0xa6, 0x04, 0x03, 0x00, 0x00,
}
