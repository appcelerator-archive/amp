// Code generated by protoc-gen-go.
// source: github.com/appcelerator/amp/data/accounts/accounts.proto
// DO NOT EDIT!

/*
Package accounts is a generated protocol buffer package.

It is generated from these files:
	github.com/appcelerator/amp/data/accounts/accounts.proto

It has these top-level messages:
	User
	TeamResource
	Team
	OrganizationMember
	Organization
	Account
*/
package accounts

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type TeamPermissionLevel int32

const (
	TeamPermissionLevel_TEAM_READ  TeamPermissionLevel = 0
	TeamPermissionLevel_TEAM_WRITE TeamPermissionLevel = 1
	TeamPermissionLevel_TEAM_ADMIN TeamPermissionLevel = 2
)

var TeamPermissionLevel_name = map[int32]string{
	0: "TEAM_READ",
	1: "TEAM_WRITE",
	2: "TEAM_ADMIN",
}
var TeamPermissionLevel_value = map[string]int32{
	"TEAM_READ":  0,
	"TEAM_WRITE": 1,
	"TEAM_ADMIN": 2,
}

func (x TeamPermissionLevel) String() string {
	return proto.EnumName(TeamPermissionLevel_name, int32(x))
}
func (TeamPermissionLevel) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type OrganizationRole int32

const (
	OrganizationRole_ORGANIZATION_MEMBER OrganizationRole = 0
	OrganizationRole_ORGANIZATION_OWNER  OrganizationRole = 1
)

var OrganizationRole_name = map[int32]string{
	0: "ORGANIZATION_MEMBER",
	1: "ORGANIZATION_OWNER",
}
var OrganizationRole_value = map[string]int32{
	"ORGANIZATION_MEMBER": 0,
	"ORGANIZATION_OWNER":  1,
}

func (x OrganizationRole) String() string {
	return proto.EnumName(OrganizationRole_name, int32(x))
}
func (OrganizationRole) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type AccountType int32

const (
	AccountType_USER         AccountType = 0
	AccountType_ORGANIZATION AccountType = 1
)

var AccountType_name = map[int32]string{
	0: "USER",
	1: "ORGANIZATION",
}
var AccountType_value = map[string]int32{
	"USER":         0,
	"ORGANIZATION": 1,
}

func (x AccountType) String() string {
	return proto.EnumName(AccountType_name, int32(x))
}
func (AccountType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

type User struct {
	Name         string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Email        string `protobuf:"bytes,2,opt,name=email" json:"email,omitempty"`
	PasswordHash string `protobuf:"bytes,3,opt,name=password_hash,json=passwordHash" json:"password_hash,omitempty"`
	IsVerified   bool   `protobuf:"varint,4,opt,name=is_verified,json=isVerified" json:"is_verified,omitempty"`
	CreateDt     int64  `protobuf:"varint,5,opt,name=create_dt,json=createDt" json:"create_dt,omitempty"`
}

func (m *User) Reset()                    { *m = User{} }
func (m *User) String() string            { return proto.CompactTextString(m) }
func (*User) ProtoMessage()               {}
func (*User) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *User) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *User) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *User) GetPasswordHash() string {
	if m != nil {
		return m.PasswordHash
	}
	return ""
}

func (m *User) GetIsVerified() bool {
	if m != nil {
		return m.IsVerified
	}
	return false
}

func (m *User) GetCreateDt() int64 {
	if m != nil {
		return m.CreateDt
	}
	return 0
}

type TeamResource struct {
	Id              string              `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	PermissionLevel TeamPermissionLevel `protobuf:"varint,2,opt,name=permission_level,json=permissionLevel,enum=accounts.TeamPermissionLevel" json:"permission_level,omitempty"`
}

func (m *TeamResource) Reset()                    { *m = TeamResource{} }
func (m *TeamResource) String() string            { return proto.CompactTextString(m) }
func (*TeamResource) ProtoMessage()               {}
func (*TeamResource) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *TeamResource) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *TeamResource) GetPermissionLevel() TeamPermissionLevel {
	if m != nil {
		return m.PermissionLevel
	}
	return TeamPermissionLevel_TEAM_READ
}

type Team struct {
	Name      string          `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	CreateDt  int64           `protobuf:"varint,2,opt,name=create_dt,json=createDt" json:"create_dt,omitempty"`
	Members   []string        `protobuf:"bytes,3,rep,name=members" json:"members,omitempty"`
	Resources []*TeamResource `protobuf:"bytes,4,rep,name=resources" json:"resources,omitempty"`
}

func (m *Team) Reset()                    { *m = Team{} }
func (m *Team) String() string            { return proto.CompactTextString(m) }
func (*Team) ProtoMessage()               {}
func (*Team) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *Team) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Team) GetCreateDt() int64 {
	if m != nil {
		return m.CreateDt
	}
	return 0
}

func (m *Team) GetMembers() []string {
	if m != nil {
		return m.Members
	}
	return nil
}

func (m *Team) GetResources() []*TeamResource {
	if m != nil {
		return m.Resources
	}
	return nil
}

type OrganizationMember struct {
	Name string           `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Role OrganizationRole `protobuf:"varint,2,opt,name=role,enum=accounts.OrganizationRole" json:"role,omitempty"`
}

func (m *OrganizationMember) Reset()                    { *m = OrganizationMember{} }
func (m *OrganizationMember) String() string            { return proto.CompactTextString(m) }
func (*OrganizationMember) ProtoMessage()               {}
func (*OrganizationMember) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *OrganizationMember) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *OrganizationMember) GetRole() OrganizationRole {
	if m != nil {
		return m.Role
	}
	return OrganizationRole_ORGANIZATION_MEMBER
}

type Organization struct {
	Name     string                `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Email    string                `protobuf:"bytes,2,opt,name=email" json:"email,omitempty"`
	CreateDt int64                 `protobuf:"varint,3,opt,name=create_dt,json=createDt" json:"create_dt,omitempty"`
	Members  []*OrganizationMember `protobuf:"bytes,4,rep,name=members" json:"members,omitempty"`
	Teams    []*Team               `protobuf:"bytes,5,rep,name=teams" json:"teams,omitempty"`
}

func (m *Organization) Reset()                    { *m = Organization{} }
func (m *Organization) String() string            { return proto.CompactTextString(m) }
func (*Organization) ProtoMessage()               {}
func (*Organization) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *Organization) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Organization) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *Organization) GetCreateDt() int64 {
	if m != nil {
		return m.CreateDt
	}
	return 0
}

func (m *Organization) GetMembers() []*OrganizationMember {
	if m != nil {
		return m.Members
	}
	return nil
}

func (m *Organization) GetTeams() []*Team {
	if m != nil {
		return m.Teams
	}
	return nil
}

type Account struct {
	Type AccountType `protobuf:"varint,1,opt,name=type,enum=accounts.AccountType" json:"type,omitempty"`
	Name string      `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
}

func (m *Account) Reset()                    { *m = Account{} }
func (m *Account) String() string            { return proto.CompactTextString(m) }
func (*Account) ProtoMessage()               {}
func (*Account) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *Account) GetType() AccountType {
	if m != nil {
		return m.Type
	}
	return AccountType_USER
}

func (m *Account) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func init() {
	proto.RegisterType((*User)(nil), "accounts.User")
	proto.RegisterType((*TeamResource)(nil), "accounts.TeamResource")
	proto.RegisterType((*Team)(nil), "accounts.Team")
	proto.RegisterType((*OrganizationMember)(nil), "accounts.OrganizationMember")
	proto.RegisterType((*Organization)(nil), "accounts.Organization")
	proto.RegisterType((*Account)(nil), "accounts.Account")
	proto.RegisterEnum("accounts.TeamPermissionLevel", TeamPermissionLevel_name, TeamPermissionLevel_value)
	proto.RegisterEnum("accounts.OrganizationRole", OrganizationRole_name, OrganizationRole_value)
	proto.RegisterEnum("accounts.AccountType", AccountType_name, AccountType_value)
}

func init() {
	proto.RegisterFile("github.com/appcelerator/amp/data/accounts/accounts.proto", fileDescriptor0)
}

var fileDescriptor0 = []byte{
	// 521 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x53, 0x5f, 0x8f, 0xd2, 0x4e,
	0x14, 0xdd, 0xfe, 0xe1, 0xb7, 0x70, 0x97, 0xe5, 0xd7, 0xcc, 0xea, 0xda, 0xf8, 0x27, 0x92, 0xea,
	0x03, 0xcb, 0x03, 0x24, 0x68, 0x8c, 0xaf, 0x55, 0x1a, 0x21, 0x11, 0x30, 0x23, 0xeb, 0x1a, 0x5f,
	0x9a, 0xa1, 0xbd, 0x2e, 0x93, 0x50, 0xa6, 0x99, 0x19, 0xd6, 0xac, 0x5f, 0xc0, 0x0f, 0xe0, 0x47,
	0xf1, 0x0b, 0x1a, 0x5a, 0xa0, 0x94, 0xf0, 0xe2, 0xdb, 0x9c, 0x73, 0xcf, 0xbd, 0x39, 0xe7, 0x40,
	0xe1, 0xed, 0x2d, 0xd7, 0xf3, 0xd5, 0xac, 0x13, 0x89, 0xa4, 0xcb, 0xd2, 0x34, 0xc2, 0x05, 0x4a,
	0xa6, 0x85, 0xec, 0xb2, 0x24, 0xed, 0xc6, 0x4c, 0xb3, 0x2e, 0x8b, 0x22, 0xb1, 0x5a, 0x6a, 0xb5,
	0x7b, 0x74, 0x52, 0x29, 0xb4, 0x20, 0xd5, 0x2d, 0xf6, 0x7e, 0x1b, 0x60, 0x5f, 0x2b, 0x94, 0x84,
	0x80, 0xbd, 0x64, 0x09, 0xba, 0x46, 0xd3, 0x68, 0xd5, 0x68, 0xf6, 0x26, 0x0f, 0xa0, 0x82, 0x09,
	0xe3, 0x0b, 0xd7, 0xcc, 0xc8, 0x1c, 0x90, 0x17, 0x70, 0x9e, 0x32, 0xa5, 0x7e, 0x08, 0x19, 0x87,
	0x73, 0xa6, 0xe6, 0xae, 0x95, 0x4d, 0xeb, 0x5b, 0x72, 0xc0, 0xd4, 0x9c, 0x3c, 0x87, 0x33, 0xae,
	0xc2, 0x3b, 0x94, 0xfc, 0x3b, 0xc7, 0xd8, 0xb5, 0x9b, 0x46, 0xab, 0x4a, 0x81, 0xab, 0x2f, 0x1b,
	0x86, 0x3c, 0x81, 0x5a, 0x24, 0x91, 0x69, 0x0c, 0x63, 0xed, 0x56, 0x9a, 0x46, 0xcb, 0xa2, 0xd5,
	0x9c, 0xe8, 0x6b, 0x6f, 0x0e, 0xf5, 0x29, 0xb2, 0x84, 0xa2, 0x12, 0x2b, 0x19, 0x21, 0x69, 0x80,
	0xc9, 0xe3, 0x8d, 0x35, 0x93, 0xc7, 0x64, 0x00, 0x4e, 0x8a, 0x32, 0xe1, 0x4a, 0x71, 0xb1, 0x0c,
	0x17, 0x78, 0x87, 0xb9, 0xc7, 0x46, 0xef, 0x59, 0x67, 0x17, 0x75, 0x7d, 0xe1, 0xd3, 0x4e, 0xf5,
	0x71, 0x2d, 0xa2, 0xff, 0xa7, 0x65, 0xc2, 0xfb, 0x65, 0x80, 0xbd, 0x16, 0x1e, 0xcd, 0x5f, 0xf2,
	0x68, 0x96, 0x3d, 0x12, 0x17, 0x4e, 0x13, 0x4c, 0x66, 0x28, 0x95, 0x6b, 0x35, 0xad, 0x56, 0x8d,
	0x6e, 0x21, 0x79, 0x0d, 0x35, 0xb9, 0x71, 0xae, 0x5c, 0xbb, 0x69, 0xb5, 0xce, 0x7a, 0x97, 0x65,
	0x5b, 0xdb, 0x60, 0xb4, 0x10, 0x7a, 0x5f, 0x81, 0x4c, 0xe4, 0x2d, 0x5b, 0xf2, 0x9f, 0x4c, 0x73,
	0xb1, 0x1c, 0x65, 0xc7, 0x8e, 0xda, 0xea, 0x80, 0x2d, 0xc5, 0x02, 0x37, 0x89, 0x1f, 0x17, 0xa7,
	0xf7, 0xf7, 0xa9, 0x58, 0x20, 0xcd, 0x74, 0xde, 0x1f, 0x03, 0xea, 0xfb, 0xa3, 0x7f, 0xf8, 0xad,
	0x4b, 0x0d, 0x58, 0x07, 0x0d, 0xbc, 0x29, 0x1a, 0xc8, 0x53, 0x3e, 0x3d, 0x6e, 0x25, 0x8f, 0x52,
	0xf4, 0xf3, 0x12, 0x2a, 0x1a, 0x59, 0xa2, 0xdc, 0x4a, 0xb6, 0xd5, 0x38, 0xe8, 0x26, 0x1f, 0x7a,
	0x03, 0x38, 0xf5, 0x73, 0x9e, 0x5c, 0x81, 0xad, 0xef, 0xd3, 0xdc, 0x6f, 0xa3, 0xf7, 0xb0, 0xd0,
	0x6f, 0x04, 0xd3, 0xfb, 0x14, 0x69, 0x26, 0xd9, 0x45, 0x33, 0x8b, 0x68, 0xed, 0x3e, 0x5c, 0x1c,
	0xf9, 0x2f, 0x90, 0x73, 0xa8, 0x4d, 0x03, 0x7f, 0x14, 0xd2, 0xc0, 0xef, 0x3b, 0x27, 0xa4, 0x01,
	0x90, 0xc1, 0x1b, 0x3a, 0x9c, 0x06, 0x8e, 0xb1, 0xc3, 0x7e, 0x7f, 0x34, 0x1c, 0x3b, 0x66, 0xfb,
	0x3d, 0x38, 0x87, 0xfd, 0x92, 0x47, 0x70, 0x31, 0xa1, 0x1f, 0xfc, 0xf1, 0xf0, 0x9b, 0x3f, 0x1d,
	0x4e, 0xc6, 0xe1, 0x28, 0x18, 0xbd, 0x0b, 0xa8, 0x73, 0x42, 0x2e, 0x81, 0x94, 0x06, 0x93, 0x9b,
	0x71, 0x40, 0x1d, 0xa3, 0x7d, 0x05, 0x67, 0x7b, 0x9e, 0x49, 0x15, 0xec, 0xeb, 0xcf, 0xd9, 0x82,
	0x03, 0xf5, 0xfd, 0x05, 0xc7, 0x98, 0xfd, 0x97, 0x7d, 0xaa, 0xaf, 0xfe, 0x06, 0x00, 0x00, 0xff,
	0xff, 0x35, 0x88, 0xf1, 0x6f, 0xe6, 0x03, 0x00, 0x00,
}
