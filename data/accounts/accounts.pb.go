// Code generated by protoc-gen-go.
// source: github.com/appcelerator/amp/data/accounts/accounts.proto
// DO NOT EDIT!

/*
Package accounts is a generated protocol buffer package.

It is generated from these files:
	github.com/appcelerator/amp/data/accounts/accounts.proto

It has these top-level messages:
	User
	Account
*/
package accounts

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type AccountType int32

const (
	AccountType_USER AccountType = 0
)

var AccountType_name = map[int32]string{
	0: "USER",
}
var AccountType_value = map[string]int32{
	"USER": 0,
}

func (x AccountType) String() string {
	return proto.EnumName(AccountType_name, int32(x))
}
func (AccountType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type User struct {
	Name         string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Email        string `protobuf:"bytes,2,opt,name=email" json:"email,omitempty"`
	PasswordHash string `protobuf:"bytes,3,opt,name=password_hash,json=passwordHash" json:"password_hash,omitempty"`
	IsVerified   bool   `protobuf:"varint,4,opt,name=is_verified,json=isVerified" json:"is_verified,omitempty"`
	CreateDt     int64  `protobuf:"varint,5,opt,name=create_dt,json=createDt" json:"create_dt,omitempty"`
	TokenUsed    bool   `protobuf:"varint,6,opt,name=token_used,json=tokenUsed" json:"token_used,omitempty"`
}

func (m *User) Reset()                    { *m = User{} }
func (m *User) String() string            { return proto.CompactTextString(m) }
func (*User) ProtoMessage()               {}
func (*User) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *User) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *User) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *User) GetPasswordHash() string {
	if m != nil {
		return m.PasswordHash
	}
	return ""
}

func (m *User) GetIsVerified() bool {
	if m != nil {
		return m.IsVerified
	}
	return false
}

func (m *User) GetCreateDt() int64 {
	if m != nil {
		return m.CreateDt
	}
	return 0
}

func (m *User) GetTokenUsed() bool {
	if m != nil {
		return m.TokenUsed
	}
	return false
}

type Account struct {
	Type AccountType `protobuf:"varint,1,opt,name=type,enum=accounts.AccountType" json:"type,omitempty"`
	Name string      `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
}

func (m *Account) Reset()                    { *m = Account{} }
func (m *Account) String() string            { return proto.CompactTextString(m) }
func (*Account) ProtoMessage()               {}
func (*Account) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Account) GetType() AccountType {
	if m != nil {
		return m.Type
	}
	return AccountType_USER
}

func (m *Account) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func init() {
	proto.RegisterType((*User)(nil), "accounts.User")
	proto.RegisterType((*Account)(nil), "accounts.Account")
	proto.RegisterEnum("accounts.AccountType", AccountType_name, AccountType_value)
}

func init() {
	proto.RegisterFile("github.com/appcelerator/amp/data/accounts/accounts.proto", fileDescriptor0)
}

var fileDescriptor0 = []byte{
	// 268 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x4c, 0x90, 0x41, 0x4b, 0xfb, 0x30,
	0x18, 0xc6, 0xff, 0xdd, 0xba, 0xfd, 0xdb, 0x77, 0x2a, 0x12, 0x14, 0x03, 0x22, 0x96, 0x79, 0xa9,
	0x1e, 0x5a, 0xd0, 0x8b, 0x57, 0x41, 0x61, 0xe7, 0x6a, 0xbd, 0x96, 0x77, 0xcd, 0xab, 0x0d, 0xae,
	0x4d, 0x48, 0x52, 0x65, 0x5f, 0xcb, 0x4f, 0x28, 0xa4, 0x5b, 0xf5, 0xf6, 0x3c, 0xbf, 0x3c, 0x81,
	0xfc, 0x02, 0xf7, 0xef, 0xd2, 0x35, 0xfd, 0x3a, 0xab, 0x55, 0x9b, 0xa3, 0xd6, 0x35, 0x6d, 0xc8,
	0xa0, 0x53, 0x26, 0xc7, 0x56, 0xe7, 0x02, 0x1d, 0xe6, 0x58, 0xd7, 0xaa, 0xef, 0x9c, 0x1d, 0x43,
	0xa6, 0x8d, 0x72, 0x8a, 0x45, 0xfb, 0xbe, 0xfc, 0x0e, 0x20, 0x2c, 0x2d, 0x19, 0xc6, 0x20, 0xec,
	0xb0, 0x25, 0x1e, 0x24, 0x41, 0x1a, 0x17, 0x3e, 0xb3, 0x13, 0x98, 0x51, 0x8b, 0x72, 0xc3, 0x27,
	0x1e, 0x0e, 0x85, 0x5d, 0xc1, 0xa1, 0x46, 0x6b, 0xbf, 0x94, 0x11, 0x55, 0x83, 0xb6, 0xe1, 0x53,
	0x7f, 0x7a, 0xb0, 0x87, 0x2b, 0xb4, 0x0d, 0xbb, 0x84, 0x85, 0xb4, 0xd5, 0x27, 0x19, 0xf9, 0x26,
	0x49, 0xf0, 0x30, 0x09, 0xd2, 0xa8, 0x00, 0x69, 0x5f, 0x77, 0x84, 0x9d, 0x43, 0x5c, 0x1b, 0x42,
	0x47, 0x95, 0x70, 0x7c, 0x96, 0x04, 0xe9, 0xb4, 0x88, 0x06, 0xf0, 0xe8, 0xd8, 0x05, 0x80, 0x53,
	0x1f, 0xd4, 0x55, 0xbd, 0x25, 0xc1, 0xe7, 0xfe, 0x72, 0xec, 0x49, 0x69, 0x49, 0x2c, 0x57, 0xf0,
	0xff, 0x61, 0x10, 0x60, 0xd7, 0x10, 0xba, 0xad, 0x1e, 0x9e, 0x7d, 0x74, 0x7b, 0x9a, 0x8d, 0xa2,
	0xbb, 0xc1, 0xcb, 0x56, 0x53, 0xe1, 0x27, 0xa3, 0xe1, 0xe4, 0xd7, 0xf0, 0xe6, 0x0c, 0x16, 0x7f,
	0x86, 0x2c, 0x82, 0xb0, 0x7c, 0x7e, 0x2a, 0x8e, 0xff, 0xad, 0xe7, 0xfe, 0xa3, 0xee, 0x7e, 0x02,
	0x00, 0x00, 0xff, 0xff, 0xa0, 0x63, 0x35, 0x6d, 0x64, 0x01, 0x00, 0x00,
}
