// Code generated by protoc-gen-go.
// source: github.com/appcelerator/amp/data/account/schema/account.proto
// DO NOT EDIT!

/*
Package schema is a generated protocol buffer package.

It is generated from these files:
	github.com/appcelerator/amp/data/account/schema/account.proto

It has these top-level messages:
	Account
*/
package schema

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type AccountType int32

const (
	AccountType_USER         AccountType = 0
	AccountType_ORGANIZATION AccountType = 1
)

var AccountType_name = map[int32]string{
	0: "USER",
	1: "ORGANIZATION",
}
var AccountType_value = map[string]int32{
	"USER":         0,
	"ORGANIZATION": 1,
}

func (x AccountType) String() string {
	return proto.EnumName(AccountType_name, int32(x))
}
func (AccountType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type Account struct {
	Id           string      `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	UserName     string      `protobuf:"bytes,2,opt,name=user_name,json=userName" json:"user_name,omitempty"`
	Type         AccountType `protobuf:"varint,3,opt,name=type,enum=schema.AccountType" json:"type,omitempty"`
	Email        string      `protobuf:"bytes,4,opt,name=email" json:"email,omitempty"`
	PasswordHash string      `protobuf:"bytes,5,opt,name=password_hash,json=passwordHash" json:"password_hash,omitempty"`
	IsVerified   bool        `protobuf:"varint,6,opt,name=is_verified,json=isVerified" json:"is_verified,omitempty"`
	CreateDt     int64       `protobuf:"varint,7,opt,name=create_dt,json=createDt" json:"create_dt,omitempty"`
}

func (m *Account) Reset()                    { *m = Account{} }
func (m *Account) String() string            { return proto.CompactTextString(m) }
func (*Account) ProtoMessage()               {}
func (*Account) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Account) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Account) GetUserName() string {
	if m != nil {
		return m.UserName
	}
	return ""
}

func (m *Account) GetType() AccountType {
	if m != nil {
		return m.Type
	}
	return AccountType_USER
}

func (m *Account) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *Account) GetPasswordHash() string {
	if m != nil {
		return m.PasswordHash
	}
	return ""
}

func (m *Account) GetIsVerified() bool {
	if m != nil {
		return m.IsVerified
	}
	return false
}

func (m *Account) GetCreateDt() int64 {
	if m != nil {
		return m.CreateDt
	}
	return 0
}

func init() {
	proto.RegisterType((*Account)(nil), "schema.Account")
	proto.RegisterEnum("schema.AccountType", AccountType_name, AccountType_value)
}

func init() {
	proto.RegisterFile("github.com/appcelerator/amp/data/account/schema/account.proto", fileDescriptor0)
}

var fileDescriptor0 = []byte{
	// 281 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x4c, 0x90, 0x4d, 0x4b, 0xf3, 0x40,
	0x14, 0x85, 0xdf, 0xe9, 0x67, 0x7a, 0xdb, 0xb7, 0x94, 0xd1, 0xc5, 0x80, 0x0b, 0x83, 0x2e, 0x8c,
	0x2e, 0x12, 0xd0, 0xb5, 0x8b, 0x82, 0xa2, 0xdd, 0xb4, 0x10, 0xab, 0x0b, 0x37, 0xe1, 0x36, 0x73,
	0x35, 0x03, 0x9d, 0xce, 0x30, 0x33, 0x55, 0xfa, 0x4f, 0xfd, 0x39, 0xd2, 0xa4, 0x8a, 0xcb, 0xf3,
	0x9c, 0xcb, 0xc3, 0xe1, 0xc2, 0xed, 0xbb, 0x0a, 0xd5, 0x76, 0x95, 0x96, 0x46, 0x67, 0x68, 0x6d,
	0x49, 0x6b, 0x72, 0x18, 0x8c, 0xcb, 0x50, 0xdb, 0x4c, 0x62, 0xc0, 0x0c, 0xcb, 0xd2, 0x6c, 0x37,
	0x21, 0xf3, 0x65, 0x45, 0xfa, 0x37, 0xa6, 0xd6, 0x99, 0x60, 0x78, 0xaf, 0xa1, 0x67, 0x5f, 0x0c,
	0xfa, 0xd3, 0xa6, 0xe1, 0x63, 0x68, 0x29, 0x29, 0x58, 0xcc, 0x92, 0x41, 0xde, 0x52, 0x92, 0x9f,
	0xc0, 0x60, 0xeb, 0xc9, 0x15, 0x1b, 0xd4, 0x24, 0x5a, 0x35, 0x8e, 0xf6, 0x60, 0x8e, 0x9a, 0xf8,
	0x05, 0x74, 0xc2, 0xce, 0x92, 0x68, 0xc7, 0x2c, 0x19, 0x5f, 0x1f, 0xa5, 0x8d, 0x2f, 0x3d, 0xb8,
	0x96, 0x3b, 0x4b, 0x79, 0x7d, 0xc0, 0x8f, 0xa1, 0x4b, 0x1a, 0xd5, 0x5a, 0x74, 0x6a, 0x43, 0x13,
	0xf8, 0x39, 0xfc, 0xb7, 0xe8, 0xfd, 0xa7, 0x71, 0xb2, 0xa8, 0xd0, 0x57, 0xa2, 0x5b, 0xb7, 0xa3,
	0x1f, 0xf8, 0x88, 0xbe, 0xe2, 0xa7, 0x30, 0x54, 0xbe, 0xf8, 0x20, 0xa7, 0xde, 0x14, 0x49, 0xd1,
	0x8b, 0x59, 0x12, 0xe5, 0xa0, 0xfc, 0xcb, 0x81, 0xec, 0x17, 0x96, 0x8e, 0x30, 0x50, 0x21, 0x83,
	0xe8, 0xc7, 0x2c, 0x69, 0xe7, 0x51, 0x03, 0xee, 0xc2, 0xd5, 0x25, 0x0c, 0xff, 0xac, 0xe1, 0x11,
	0x74, 0x9e, 0x9f, 0xee, 0xf3, 0xc9, 0x3f, 0x3e, 0x81, 0xd1, 0x22, 0x7f, 0x98, 0xce, 0x67, 0xaf,
	0xd3, 0xe5, 0x6c, 0x31, 0x9f, 0xb0, 0x55, 0xaf, 0x7e, 0xca, 0xcd, 0x77, 0x00, 0x00, 0x00, 0xff,
	0xff, 0x91, 0x5f, 0x94, 0x09, 0x55, 0x01, 0x00, 0x00,
}
