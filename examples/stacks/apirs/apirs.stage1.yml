version: "3.3"

networks:
  public:
    external: true
  monit:
    external: true
  backend:
    driver: overlay
  db:
    driver: overlay

volumes:
  mongo-primary-db:
  mongo-secondary-db:
  mongo-arbiter-db:
  consul-data-member-a:
    driver: local
    driver_opts:
      type: nfs
      device: :/appc/consul/a
      o: addr=${NFS_SERVER},nfsvers=4.1,rsize=1048576,wsize=1048576,hard,timeo=600,retrans=2
  consul-data-member-b:
    driver: local
    driver_opts:
      type: nfs
      device: :/appc/consul/b
      o: addr=${NFS_SERVER},nfsvers=4.1,rsize=1048576,wsize=1048576,hard,timeo=600,retrans=2
  consul-data-member-c:
    driver: local
    driver_opts:
      type: nfs
      device: :/appc/consul/c
      o: addr=${NFS_SERVER},nfsvers=4.1,rsize=1048576,wsize=1048576,hard,timeo=600,retrans=2
  redis-data:
  nfs_init:
    driver: local
    driver_opts:
      type: nfs
      device: :/
      o: addr=${NFS_SERVER},nfsvers=4.1,rsize=1048576,wsize=1048576,hard,timeo=600,retrans=2

services:
  mongo-primary:
    image: mongo:3.4.10
    networks:
      backend:
        aliases:
          - mongo
      db:
      public:
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.labels.amp.type.user == true
    #volumes:
      #- mongo-primary-db:/data/db
    environment:
      SERVICE_PORTS: 28017
      VIRTUAL_HOST: "mongo.apirs.*,https://mongo.apirs.*"
    command:
      ["--httpinterface", "--rest", "--replSet", "data"]

  mongo-secondary:
    image: mongo:3.4.10
    networks:
      backend:
        aliases:
          - mongo
      db:
      public:
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.labels.amp.type.user == true
    #volumes:
      #- mongo-secondary-db:/data/db
    environment:
      SERVICE_PORTS: 28017
      VIRTUAL_HOST: "mongo.apirs.*,https://mongo.apirs.*"
    command:
      ["--httpinterface", "--rest", "--replSet", "data"]

  mongo-arbiter:
    image: mongo:3.4.10
    networks:
      - db
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.labels.amp.type.user == true
    #volumes:
      #- mongo-arbiter-db:/data/db
    command:
      ["--httpinterface", "--rest", "--replSet", "data"]

  mongo_exporter:
    image: eses/mongodb_exporter:latest
    networks:
      - db
      - monit
    environment:
      MONGODB_URI: "mongodb://mongo-primary:27017"
    deploy:
      replicas: 1
      placement:
        constraints:
        - node.labels.amp.type.user == true
      labels:
        io.amp.metrics.port: "9104"
        io.amp.metrics.mode: "exporter"

  consul-member-a:
    image: consul:1.0.1
    networks:
      backend:
        aliases:
         - consul
      db:
        aliases:
         - consul
      public:
        aliases:
         - consul
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.labels.amp.type.user == true
    volumes:
      - consul-data-member-a:/consul/data
    environment:
      SERVICE_PORTS: 8500
      VIRTUAL_HOST: "https://consul.apirs.*,consul.apirs.*"
      CONSUL_BIND_INTERFACE: "eth0"
      CONSUL_CLIENT_INTERFACE: "eth0"
    command: ["agent", "-server", "-client=0.0.0.0", "-ui", "-bootstrap-expect=3", "-retry-join=consul-member-b", "-retry-join=consul-member-c"]

  consul-member-b:
    image: consul:1.0.1
    networks:
      backend:
        aliases:
         - consul
      db:
        aliases:
         - consul
      public:
        aliases:
         - consul
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.labels.amp.type.user == true
    volumes:
      - consul-data-member-b:/consul/data
    environment:
      SERVICE_PORTS: 8500
      VIRTUAL_HOST: "https://consul.apirs.*,consul.apirs.*"
      CONSUL_BIND_INTERFACE: "eth0"
      CONSUL_CLIENT_INTERFACE: "eth0"
    command: ["agent", "-server", "-client=0.0.0.0", "-ui", "-bootstrap-expect=3", "-retry-join=consul-member-b", "-retry-join=consul-member-c"]

  consul-member-c:
    image: consul:1.0.1
    networks:
      backend:
        aliases:
         - consul
      db:
        aliases:
         - consul
      public:
        aliases:
         - consul
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.labels.amp.type.user == true
    volumes:
      - consul-data-member-c:/consul/data
    environment:
      SERVICE_PORTS: 8500
      VIRTUAL_HOST: "https://consul.apirs.*,consul.apirs.*"
      CONSUL_BIND_INTERFACE: "eth0"
      CONSUL_CLIENT_INTERFACE: "eth0"
    command: ["agent", "-server", "-client=0.0.0.0", "-ui", "-bootstrap-expect=3", "-retry-join=consul-member-b", "-retry-join=consul-member-c"]

  consul_exporter:
    image: prom/consul-exporter:v0.3.0
    networks:
      - db
      - monit
    command:
      ["-consul.server=consul:8500"]
    deploy:
      replicas: 1
      placement:
        constraints:
        - node.labels.amp.type.user == true
      labels:
        io.amp.metrics.port: "9107"
        io.amp.metrics.mode: "exporter"

  redis:
    image: redis:alpine
    networks:
      - db
      - backend
    volumes:
      - redis-data:/data
    deploy:
      replicas: 1
      placement:
        constraints:
        - node.labels.amp.type.user == true

  redis_exporter:
    image: oliver006/redis_exporter:v0.13
    networks:
      - db
      - monit
    environment:
      REDIS_ADDR: "redis://redis:6379"
    deploy:
      replicas: 1
      placement:
        constraints:
        - node.labels.amp.type.user == true
      labels:
        io.amp.metrics.port: "9121"
        io.amp.metrics.mode: "exporter"

  registry:
    image: registry:2
    networks:
      - backend
      - public
    deploy:
      replicas: 1
      placement:
        constraints:
        - node.labels.amp.type.user == true
    environment:
#      REGISTRY_STORAGE_MAINTENANCE_READONLY_ENABLED: "false"
      SERVICE_PORTS: 5000
      VIRTUAL_HOST: "registry.apirs.*,https://registry.apirs.*"

  nfs-init:
    image: alpine:3.7
    networks:
      - db
    deploy:
      replicas: 1
      restart_policy:
        condition: none
      placement:
        constraints:
          - node.labels.amp.type.user == true
    volumes:
      - type: volume
        source: nfs_init
        target: /nfs
    command: [ "mkdir", "-p", "/nfs/appc/consul/a", "/nfs/appc/consul/b", "/nfs/appc/consul/c",  "/nfs/appc/arrowdb/photos", "/nfs/appc/arrowdb/files", "/nfs/appc/arrowdb/exports" ]

