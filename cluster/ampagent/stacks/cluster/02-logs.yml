version: "3.3"

networks:
  default:
    external:
      name: ampnet

volumes:
  elasticsearch-data:
  ampagent:

services:

  elasticsearch:
    image: appcelerator/elasticsearch-amp:5.6.3
    networks:
      - default
    volumes:
      - elasticsearch-data:/opt/elasticsearch/data
    labels:
      io.amp.role: "infrastructure"
      amp.service.stabilize.delay: "30s"
      amp.service.stabilize.timeout: "180s"
      amp.service.pull.timeout: "120s"
    environment:
      MIN_MASTER_NODES: 2
      NETWORK_HOST: "_eth0_"
      UNICAST_HOSTS: "tasks.elasticsearch"
      JAVA_HEAP_SIZE: "${ES_JAVA_HEAP_SIZE:-1024}"
    deploy:
      mode: replicated
      replicas: 3
      update_config:
        parallelism: 1
        delay: 45s
      restart_policy:
        condition: any
        delay: 5s
        window: 25s
      labels:
        io.amp.role: "infrastructure"
        io.amp.metrics.port: "9200"
        io.amp.metrics.path: "/_prometheus/metrics"
      placement:
        constraints:
        - node.labels.amp.type.search == true

  nats:
    image: appcelerator/amp-nats-streaming:v0.5.0
    networks:
      default:
        aliases:
          - nats
    labels:
      io.amp.role: "infrastructure"
      amp.service.stabilize.delay: "3s"
      amp.service.stabilize.timeout: "20s"
    deploy:
      mode: replicated
      replicas: 1
      labels:
        io.amp.role: "infrastructure"
      placement:
        constraints:
        - node.labels.amp.type.mq == true

  ampbeat:
    image: appcelerator/ampbeat:${TAG:-0.15.0}
    networks:
      - default
    deploy:
      mode: replicated
      replicas: 1
      labels:
        io.amp.role: "infrastructure"
      placement:
        constraints:
        - node.labels.amp.type.core == true
    labels:
      io.amp.role: "infrastructure"
      amp.service.stabilize.delay: "3s"
      amp.service.stabilize.timeout: "20s"

  kibana:
    image: appcelerator/kibana:5.6.3
    networks:
      - default
    deploy:
      mode: replicated
      replicas: 1
      labels:
        io.amp.role: "infrastructure"
        io.amp.mapping: "kibana:5601"
      placement:
        constraints:
        - node.labels.amp.type.core == true
    labels:
      io.amp.role: "infrastructure"
      amp.service.stabilize.delay: "5s"
      amp.service.stabilize.timeout: "60s"
      amp.service.pull.timeout: "120s"
    environment:
      ELASTICSEARCH_URL: "http://elasticsearch:9200"
      SERVICE_PORTS: 5601
      VIRTUAL_HOST: "http://kibana.*,https://kibana.*"

  agent:
    image: appcelerator/agent:${TAG:-0.15.0}
    networks:
      - default
    deploy:
      mode: global
      labels:
        io.amp.role: "infrastructure"
    labels:
      io.amp.role: "infrastructure"
      amp.service.stabilize.delay: "3s"
      amp.service.stabilize.timeout: "20s"
    volumes:
      - ampagent:/containers
      - /var/run/docker.sock:/var/run/docker.sock
