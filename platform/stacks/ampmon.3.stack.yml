version: "3.3"

networks:
  default:
    external:
      name: ampnet

volumes:
  prometheus-data:
  alertmanager-data:
  grafana-data:

secrets:
  alertmanager_yml:
    external: true

configs:
  prometheus_alerts_rules:
    external: true

services:

  alertmanager:
    image: prom/alertmanager:v0.7.1
    networks:
      - default
    volumes:
      - alertmanager-data:/alertmanager
    ports:
      - "9093:9093"
    labels:
      io.amp.role: "infrastructure"
    deploy:
      mode: replicated
      replicas: 1
      labels:
        io.amp.role: "infrastructure"
      placement:
        constraints:
        - node.labels.amp.type.metrics == true
    secrets:
      - source: alertmanager_yml
        target: alertmanager.yml
        mode: 0400
    command: [ "-config.file=/run/secrets/alertmanager.yml",
             "-storage.path=/alertmanager",
             "-web.external-url=http://localhost:9093" ]

  prometheus:
    image: appcelerator/amp-prometheus:${TAG:-0.12.0}
    networks:
      - default
    volumes:
      - prometheus-data:/prometheus
      - /var/run/docker.sock:/var/run/docker.sock:ro
    environment:
      SERVICE_PORTS: 9090
      VIRTUAL_HOST: "http://alerts.*,https://alerts.*"
    ports:
      - "9090:9090"
    labels:
      io.amp.role: "infrastructure"
    deploy:
      mode: replicated
      replicas: 1
      labels:
        io.amp.role: "infrastructure"
      placement:
        constraints:
        - node.labels.amp.type.metrics == true
    configs:
      - source: prometheus_alerts_rules
        target: /etc/prometheus/alerts.rules
        mode: 0400

  node_exporter:
    image: prom/node-exporter:v0.14.0
    networks:
      - default
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    ports:
      - "9100:9100"
    command: [ "-collector.procfs", "/host/proc", "-collector.sysfs", "/host/sys", "-collector.filesystem.ignored-mount-points", "^/(sys|proc|dev|host|etc)($$|/)"]
    labels:
      io.amp.role: "infrastructure"
    deploy:
      mode: global
      labels:
        io.amp.role: "infrastructure"

  nats_exporter:
    image: appcelerator/prometheus-nats-exporter:latest
    command: ["-varz", "-routez", "-connz", "-subz", "nats,http://nats:8222"]
    #ports:
      #- target: 7777
      #- published: 7777
    networks:
      - default
    labels:
      io.amp.role: "infrastructure"
    deploy:
      mode: replicated
      replicas: 1
      labels:
        io.amp.role: "infrastructure"
      placement:
        constraints:
        - node.labels.amp.type.metrics == true

  haproxy_exporter:
    image: prom/haproxy-exporter:v0.7.1
    command: ["-haproxy.scrape-uri", "http://stats:stats@proxy:1936/haproxy?stats;csv"]
    networks:
      - default
    #ports:
      #- target: 9101
      #- published: 9101
    labels:
      io.amp.role: "infrastructure"
    deploy:
      mode: replicated
      replicas: 1
      labels:
        io.amp.role: "infrastructure"
      placement:
        constraints:
        - node.labels.amp.type.metrics == true

  grafana:
    image: appcelerator/grafana-amp:1.2.4
    networks:
      - default
    volumes:
      - grafana-data:/var/lib/grafana
    environment:
      SERVICE_PORTS: 3000
      VIRTUAL_HOST: "http://dashboard.*,https://dashboard.*"
    labels:
      io.amp.role: "infrastructure"
    deploy:
      mode: replicated
      replicas: 1
      labels:
        io.amp.role: "infrastructure"
      placement:
        constraints:
        - node.labels.amp.type.metrics == true
