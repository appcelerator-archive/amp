version: "3.1"

networks:
  default:
    external:
      name: ampnet

volumes:
  ampagent:

secrets:
  amplifier_yml:
    external: true

services:

  amplifier:
    image: appcelerator/amplifier:${TAG:-0.11.0}
    networks:
      default:
        aliases:
          - amplifier
    environment:
      REGISTRATION: ${REGISTRATION:-email}
      NOTIFICATIONS: ${NOTIFICATIONS:-true}
    ports:
      - "50101:50101"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    labels:
      io.amp.role: "infrastructure"
    deploy:
      mode: global
      labels:
        io.amp.role: "infrastructure"
      restart_policy:
        condition: on-failure
      placement:
        constraints:
        - node.labels.amp.type.api == true
    secrets:
      - source: amplifier_yml
        target: amplifier.yml
        mode: 0400

  gateway:
    image: appcelerator/gateway:${TAG:-0.11.0}
    networks:
      default:
        aliases:
          - gateway
    labels:
      io.amp.role: "infrastructure"
    environment:
      SERVICE_PORTS: 80
      VIRTUAL_HOST: "https://gw.*,http://gw.*"
    deploy:
      mode: global
      labels:
        io.amp.role: "infrastructure"
      restart_policy:
        condition: on-failure
      placement:
        constraints:
        - node.labels.amp.type.core == true

  agent:
    image: appcelerator/agent:${TAG:-0.11.0}
    networks:
      default:
        aliases:
          - agent
    deploy:
      mode: global
      labels:
        io.amp.role: "infrastructure"
    labels:
      io.amp.role: "infrastructure"
    volumes:
      - ampagent:/containers
      - /var/run/docker.sock:/var/run/docker.sock
