#!/bin/bash

docker pull docker &>/dev/null
[[ "$DOCKERHOST" = "m1" ]] && amps="docker run -t --rm --network=hostnet docker --host=m1" || amps="docker --host=$DOCKERHOST"

usage() {
    echo "usage: swarmcheck [-t TIMEOUT] [-c COUNT]"
    echo "example: swarmcheck -t 120 -c 5"
    exit 1
}

[[ $# -eq 0 ]] && usage

# max script timeout, default = 300 seconds (5m)
TIMEOUT="300"
while getopts ':t:c:' opt; do
  case $opt in
    t) TIMEOUT=$OPTARG ;;
    c) COUNT=$OPTARG ;;
  esac
done

SECONDS=0
typeset -i nc
typeset -i ready
while true; do
    # number of nodes + 1 (header)
    nc=$($amps node ls | grep -v Down | wc -l)
    if [[ $? -ne 0 ]]; then nc=0; fi
    # number of nodes ready and active
    ready=$($amps node ls | grep "Ready *Active" | wc -l)
    # bug in the filter: the list is not complete
    #accepted=$(docker node ls --filter membership=accepted | awk '{ print $1 }' | wc -w)
    if [[ $nc -gt 1 && $nc -eq $((ready+1)) ]]; then
      if [[ -n "$COUNT" && $ready -eq $COUNT ]]; then
        echo "the swarm has $ready active and ready nodes"
        exit 0
      fi
    fi
    [[ $SECONDS -gt $TIMEOUT ]] && exit 1
    sleep 1
done
