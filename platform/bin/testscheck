#!/bin/bash

testdir=$1
[[ ! -d "$testdir" ]] && echo "usage: $0 TESTDIR" && exit 1

# get full path, strip trailing slash if present
testdir="$(cd "$testdir"; pwd -P)"

formattime() {
  echo $(printf '%02dh:%02dm:%02ds\n' $(($1/3600)) $(($1%3600/60)) $(($1%60)))
}

runtest() {
  echo -------------------------------------
  count=$1
  file=$2
  f="${file#$testdir/}"
  echo "#$count [$f]"

  # TODO: add verbose mode for stderr
  #($file 1>/dev/null)
  ($file)
  ec=$?

  [[ $ec -eq 0 ]] && echo PASS || echo "*** FAIL (exit code: $ec) ***"
  return $ec
}

printresults() {
  elapsed=$1
  count=$2
  pass=$3
  fail=$4
  echo =====================================
  echo "DONE: $((count)) test(s)"
  echo "TIME: $(formattime $elapsed)"
  echo "PASS: $pass"
  echo "FAIL: $fail"
  echo =====================================
}

include() {
  if [[ -d "$TESTINCLUDE" ]]; then
    files=$(find "$TESTINCLUDE" -type f -mindepth 1 -maxdepth 1 -name "*.sh")
    for f in $files; do
      echo "source $f"
      source $f
    done
  fi
}

runtests() {
  SECONDS=0
  count=0
  pass=0
  fail=0

  while read file
  do
    ((count++))
    runtest $count $file
    if [[ $? -eq 0 ]]; then
      ((pass++))
    else
      ((fail++))
    fi
  done < <(find "$testdir" -type f -perm -u=x)

  printresults $SECONDS $count $pass $fail
  exit $fail
}

main() {
  (runtests $@)
  exit $?
}

main $@

