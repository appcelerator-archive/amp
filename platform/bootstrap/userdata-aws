#!/bin/bash

set -x

REGION=${REGION:-us-west-2}
STACK_NAME=${STACK_NAME:-unset}
VPC_ID=${VPC_ID:-unset}
BASE_URL=${BASE_URL:-unset}
MANAGER_SIZE=${MANAGER_SIZE:-3}
ENV_FILE=${ENV_FILE:-/tmp/env.ikt}

wget -qO- https://get.docker.com/ | sh
usermod -G docker ubuntu || true
systemctl enable docker.service
systemctl start docker.service || true

_myip=$(curl 169.254.169.254/latest/meta-data/local-ipv4)
_allips=$(aws ec2 describe-instances --region=${REGION} --filters "Name=tag:Name,Values=${STACK_NAME}-manager" "Name=instance-state-name,Values=pending,running" "Name=vpc-id,Values=${VPC_ID}" --query="Reservations[*].Instances[*].PrivateIpAddress" --output=text | sort -n)
_leaderip=$(echo $_allips | cut -f1 -d " ")
_nodestatus=""
_rc=0
COUNTER=0
for i in $_allips; do
  docker -H "$i:2375" node inspect self --format "{{ .ManagerStatus.Leader }}" 2>/dev/null
  _rc=$((_rc+$?))
  COUNTER=$((COUNTER+1))
done
if [ "$_myip" = "$_leaderip" ] && [ "$_rc" = "${MANAGER_SIZE}" ]; then
  /usr/local/bin/bootstrap.sh -1 -p aws -t aws -e "$ENV_FILE" "${BASE_URL}"
  exit
fi
_loop=0
_maxloop=120
while [ $((++_loop)) -lt $_maxloop ]; do
  for i in $_allips; do
    _nodestatus=$(docker -H "$i:2375" node inspect self --format "{{ .ManagerStatus.Leader }}" 2>/dev/null)
    if [ "$_nodestatus" = "true" ]; then
      /usr/local/bin/bootstrap.sh -j $i -p aws -t aws -e "$ENV_FILE" "${BASE_URL}"
      exit
    fi
  done
  sleep 1
done
